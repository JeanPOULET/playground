{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c99c1ef606bdd2208bb35b367cf315ebbbf0a5b2f145086999b1fdba1a5c7796b45e9654186128955c14dc5bd7870b7f2bd3a4a068e33d2660fc8d60123af272",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: MAT_DATE_FORMATS, useValue: format,\n}"
                }
            ],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl<Date | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "title",
                    "defaultValue": "'date-omg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ClarityTrialComponent",
                    "type": "component"
                },
                {
                    "name": "ComboboxComponent",
                    "type": "component"
                },
                {
                    "name": "PrimeInputComponent",
                    "type": "component"
                },
                {
                    "name": "Button"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {RouterOutlet} from '@angular/router';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatDateFormats, MatNativeDateModule,\r\n  NativeDateAdapter,\r\n  provideNativeDateAdapter\r\n} from '@angular/material/core';\r\nimport {FormControl, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\r\nimport {MAT_DATEPICKER_VALIDATORS, MatDatepicker, MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {provideAnimationsAsync} from '@angular/platform-browser/animations/async';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {CommonModule} from '@angular/common';\r\nimport dayjs from 'dayjs';\r\nimport {ClarityTrialComponent} from './comps/clarity-trial/clarity-trial.component';\r\nimport {ComboboxComponent} from './comps/combobox/combobox.component';\r\nimport {PrimeInputComponent} from './comps/primeng/prime-input/prime-input.component';\r\nimport {Button} from 'primeng/button';\r\n\r\nconst format: MatDateFormats = {\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}\r\n\r\nconst validate = (control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ClarityTrialComponent,\r\n    ComboboxComponent, PrimeInputComponent, Button\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n  providers: [\r\n    {\r\n      provide: MAT_DATE_FORMATS, useValue: format,\r\n    }\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'date-omg';\r\n  control: FormControl<Date | null>;\r\n\r\n  constructor() {\r\n\r\n    this.control = new FormControl(new Date(\"02/02/2024 00:00:00\"), [validate]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.control.setValue(new Date(\"02/02/2024 00:00:00\"))\r\n    this.control.valueChanges.subscribe(val => {\r\n      console.log(val);\r\n    })\r\n  }\r\n\r\n\r\n  toggleTheme() {\r\n    const element = document.querySelector('html');\r\n    element.classList.toggle('my-app-dark');\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 70
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <p-button (onClick)=\"toggleTheme()\"\r\n            [label]=\"'Theme toggle'\"\r\n  />\r\n\r\n  <clarity-trial [formControl]=\"control\"/>\r\n  <combobox/>\r\n  <app-prime-input/>\r\n</div>\r\n"
        },
        {
            "name": "ClarityTrialComponent",
            "id": "component-ClarityTrialComponent-306e72a71dfb5cb4496ba766cfbea27ebbffa1d92a70080f2c3c3161e6aab2ad6059d383f90dd970391b46b0cdc5939eadaf7382c8cfaa1ddf825759a45f7e3b",
            "file": "src/app/comps/clarity-trial/clarity-trial.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clarity-trial",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./clarity-trial.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "count",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "doubleCount",
                    "defaultValue": "computed(() => this.count() * 2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ClarityModule",
                    "type": "module"
                },
                {
                    "name": "InputText"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, computed, HostBinding, Input, OnInit, Signal, signal, WritableSignal} from '@angular/core';\r\nimport {ClarityModule} from '@clr/angular';\r\nimport {FormControl} from '@angular/forms';\r\nimport {InputText} from 'primeng/inputtext';\r\n\r\n@Component({\r\n  selector: 'clarity-trial',\r\n  imports: [ClarityModule, InputText],\r\n  templateUrl: './clarity-trial.component.html',\r\n  styleUrl: './clarity-trial.component.scss'\r\n})\r\nexport class ClarityTrialComponent implements OnInit {\r\n  count: WritableSignal<number> = signal(0);\r\n  doubleCount: Signal<number> = computed(() => this.count() * 2);\r\n\r\n  @Input()\r\n  set startWith(nb: number){\r\n    this._startWith = nb;\r\n    this.count.set(nb ?? 0);\r\n  };\r\n\r\n  _startWith: number;\r\n\r\n  ngOnInit() {\r\n    this.count.set(this._startWith);\r\n  }\r\n\r\n  onLick() {\r\n    this.count.update((val) => val + 5)\r\n  }\r\n}\r\n",
            "styleUrl": "./clarity-trial.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "startWith": {
                    "name": "startWith",
                    "setSignature": {
                        "name": "startWith",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nb",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "nb",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<p>clarity-trial works!</p>\r\n\r\n<input clrInput placeholder=\"Email\" name=\"name\" data-testid=\"email\"/>\r\n<input clrInput placeholder=\"Password\" name=\"name\" data-testid=\"password\"/>\r\n\r\n\r\n\r\n<button (click)=\"onLick()\"\r\n  class=\"btn btn-primary\">Primary</button>\r\n\r\n\r\n{{count()}}\r\n{{doubleCount()}}\r\n"
        },
        {
            "name": "ComboboxComponent",
            "id": "component-ComboboxComponent-c3810fa6b83267f486548c54715cfb75d050dd2e83da5b8a52f5a7d2be4095fc2ebf9504f6f4934c2df17b2e4aea3ceaef9efccf811ba47bd2c1cc637ecce4d7",
            "file": "src/app/comps/combobox/combobox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "combobox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./combobox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "states",
                    "defaultValue": "['chevre', 'mouton', 'chatton']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ClrComboboxModule",
                    "type": "module"
                },
                {
                    "name": "ClrIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {ClrComboboxModule, ClrIconModule} from '@clr/angular';\r\n\r\n@Component({\r\n  selector: 'combobox',\r\n  imports: [ClrComboboxModule, ClrIconModule],\r\n  templateUrl: './combobox.component.html',\r\n  styleUrl: './combobox.component.scss'\r\n})\r\nexport class ComboboxComponent {\r\n  states: string[] = ['chevre', 'mouton', 'chatton'];\r\n\r\n}\r\n",
            "styleUrl": "./combobox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<clr-combobox-container>\r\n  <label>My State</label>\r\n  <clr-combobox  name=\"myState\" required>\r\n    <clr-options>\r\n      <clr-option *clrOptionItems=\"let state of states; field: 'name'\" [clrValue]=\"state\">\r\n        <cds-icon shape=\"world\" role=\"img\" aria-label=\"World is turning\"></cds-icon>\r\n        {{ state }}\r\n        <cds-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></cds-icon>\r\n      </clr-option>\r\n    </clr-options>\r\n  </clr-combobox>\r\n  <clr-control-helper>Helper text</clr-control-helper>\r\n  <clr-control-error>There was an error</clr-control-error>\r\n</clr-combobox-container>\r\n"
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-b41fd2d4eba8c5ad93031b095318bc45b65eb1dc484f1c92d51d2ecc720f98f07bb8f6fef2c55210634d5313001fbfa116ab02e4a7cd0558ad88df96412b55ac",
            "file": "src/app/comps/primeng/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prime-grid",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./grid.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "TableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {TableModule} from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'prime-grid',\r\n  imports: [\r\n    TableModule\r\n  ],\r\n  templateUrl: './grid.component.html',\r\n  styleUrl: './grid.component.scss'\r\n})\r\nexport class GridComponent {\r\n\r\n}\r\n",
            "styleUrl": "./grid.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n"
        },
        {
            "name": "PrimeInputComponent",
            "id": "component-PrimeInputComponent-22a899387e7b29c4fb3cc8e101a3b0b25cca8b16b593390d4f95f2756f58f70b2c8ed85c68abc7cab008142d9001bb9efc028588a7049fa9fc78d6ac735c3672",
            "file": "src/app/comps/primeng/prime-input/prime-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-prime-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./prime-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_startWith",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl('Default')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "InputText"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "Button"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, computed, Input, OnInit, Signal, signal, WritableSignal} from '@angular/core';\r\nimport {InputText} from 'primeng/inputtext';\r\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\r\nimport {Button} from 'primeng/button';\r\n\r\n@Component({\r\n  selector: 'app-prime-input',\r\n  imports: [\r\n    InputText,\r\n    ReactiveFormsModule,\r\n    Button\r\n  ],\r\n  templateUrl: './prime-input.component.html',\r\n  styleUrl: './prime-input.component.scss'\r\n})\r\nexport class PrimeInputComponent implements OnInit{\r\n  control: FormControl = new FormControl('Default');\r\n\r\n  @Input()\r\n  set startWith(nb: string){\r\n    this._startWith = nb;\r\n    this.control.setValue(this._startWith)\r\n  };\r\n\r\n  _startWith: string ='';\r\n\r\n  ngOnInit() {\r\n    this.control.setValue(this._startWith)\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./prime-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "startWith": {
                    "name": "startWith",
                    "setSignature": {
                        "name": "startWith",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nb",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "nb",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<label>Nique</label>\r\n\r\n<input pInputText [formControl]=\"control\" />\r\n\r\n<p-button [label]=\"'lol'\"/>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({eventCoalescing: true}),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    importProvidersFrom(MatNativeDateModule),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Nora,\r\n        options: {\r\n        darkModeSelector: '.my-app-dark'\r\n        }\r\n\r\n      }\r\n    }),\r\n\r\n  ]\r\n}"
            },
            {
                "name": "format",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatDateFormats",
                "defaultValue": "{\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}"
            },
            {
                "name": "MyPreset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/prime-theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MaterialBaseDesignTokens",
                "defaultValue": "definePreset(Material, {\r\n  primitive: {\r\n    borderRadius: {\r\n      none: \"0\",\r\n      xs: \"2px\",\r\n      sm: \"4px\",\r\n      md: \"6px\",\r\n      lg: \"8px\",\r\n      xl: \"12px\"\r\n    },\r\n    emerald: {\r\n      50: \"#E8F6F1\",\r\n      100: \"#C5EBE1\",\r\n      200: \"#9EDFCF\",\r\n      300: \"#76D3BD\",\r\n      400: \"#58C9AF\",\r\n      500: \"#3BBFA1\",\r\n      600: \"#35AF94\",\r\n      700: \"#2D9B83\",\r\n      800: \"#268873\",\r\n      900: \"#1A6657\",\r\n      950: \"#0d3329\"\r\n    },\r\n    green: {\r\n      50: \"#E8F5E9\",\r\n      100: \"#C8E6C9\",\r\n      200: \"#A5D6A7\",\r\n      300: \"#81C784\",\r\n      400: \"#66BB6A\",\r\n      500: \"#4CAF50\",\r\n      600: \"#43A047\",\r\n      700: \"#388E3C\",\r\n      800: \"#2E7D32\",\r\n      900: \"#1B5E20\",\r\n      950: \"#0e2f10\"\r\n    },\r\n    lime: {\r\n      50: \"#F9FBE7\",\r\n      100: \"#F0F4C3\",\r\n      200: \"#E6EE9C\",\r\n      300: \"#DCE775\",\r\n      400: \"#D4E157\",\r\n      500: \"#CDDC39\",\r\n      600: \"#C0CA33\",\r\n      700: \"#AFB42B\",\r\n      800: \"#9E9D24\",\r\n      900: \"#827717\",\r\n      950: \"#413c0c\"\r\n    },\r\n    red: {\r\n      50: \"#FFEBEE\",\r\n      100: \"#FFCDD2\",\r\n      200: \"#EF9A9A\",\r\n      300: \"#E57373\",\r\n      400: \"#EF5350\",\r\n      500: \"#F44336\",\r\n      600: \"#E53935\",\r\n      700: \"#D32F2F\",\r\n      800: \"#C62828\",\r\n      900: \"#B71C1C\",\r\n      950: \"#5c0e0e\"\r\n    },\r\n    orange: {\r\n      50: \"#FFF3E0\",\r\n      100: \"#FFE0B2\",\r\n      200: \"#FFCC80\",\r\n      300: \"#FFB74D\",\r\n      400: \"#FFA726\",\r\n      500: \"#FF9800\",\r\n      600: \"#FB8C00\",\r\n      700: \"#F57C00\",\r\n      800: \"#EF6C00\",\r\n      900: \"#E65100\",\r\n      950: \"#732900\"\r\n    },\r\n    amber: {\r\n      50: \"#FFF8E1\",\r\n      100: \"#FFECB3\",\r\n      200: \"#FFE082\",\r\n      300: \"#FFD54F\",\r\n      400: \"#FFCA28\",\r\n      500: \"#FFC107\",\r\n      600: \"#FFB300\",\r\n      700: \"#FFA000\",\r\n      800: \"#FF8F00\",\r\n      900: \"#FF6F00\",\r\n      950: \"#803800\"\r\n    },\r\n    yellow: {\r\n      50: \"#FFFDE7\",\r\n      100: \"#FFF9C4\",\r\n      200: \"#FFF59D\",\r\n      300: \"#FFF176\",\r\n      400: \"#FFEE58\",\r\n      500: \"#FFEB3B\",\r\n      600: \"#FDD835\",\r\n      700: \"#FBC02D\",\r\n      800: \"#F9A825\",\r\n      900: \"#F57F17\",\r\n      950: \"#7b400c\"\r\n    },\r\n    teal: {\r\n      50: \"#E0F2F1\",\r\n      100: \"#B2DFDB\",\r\n      200: \"#80CBC4\",\r\n      300: \"#4DB6AC\",\r\n      400: \"#26A69A\",\r\n      500: \"#009688\",\r\n      600: \"#00897B\",\r\n      700: \"#00796B\",\r\n      800: \"#00695C\",\r\n      900: \"#004D40\",\r\n      950: \"#002720\"\r\n    },\r\n    cyan: {\r\n      50: \"#E0F7FA\",\r\n      100: \"#B2EBF2\",\r\n      200: \"#80DEEA\",\r\n      300: \"#4DD0E1\",\r\n      400: \"#26C6DA\",\r\n      500: \"#00BCD4\",\r\n      600: \"#00ACC1\",\r\n      700: \"#0097A7\",\r\n      800: \"#00838F\",\r\n      900: \"#006064\",\r\n      950: \"#003032\"\r\n    },\r\n    sky: {\r\n      50: \"#E1F5FE\",\r\n      100: \"#B3E5FC\",\r\n      200: \"#81D4FA\",\r\n      300: \"#4FC3F7\",\r\n      400: \"#29B6F6\",\r\n      500: \"#03A9F4\",\r\n      600: \"#039BE5\",\r\n      700: \"#0288D1\",\r\n      800: \"#0277BD\",\r\n      900: \"#01579B\",\r\n      950: \"#012c4e\"\r\n    },\r\n    blue: {\r\n      50: \"#E3F2FD\",\r\n      100: \"#BBDEFB\",\r\n      200: \"#90CAF9\",\r\n      300: \"#64B5F6\",\r\n      400: \"#42A5F5\",\r\n      500: \"#2196F3\",\r\n      600: \"#1E88E5\",\r\n      700: \"#1976D2\",\r\n      800: \"#1565C0\",\r\n      900: \"#0D47A1\",\r\n      950: \"#072451\"\r\n    },\r\n    indigo: {\r\n      50: \"#E8EAF6\",\r\n      100: \"#C5CAE9\",\r\n      200: \"#9FA8DA\",\r\n      300: \"#7986CB\",\r\n      400: \"#5C6BC0\",\r\n      500: \"#3F51B5\",\r\n      600: \"#3949AB\",\r\n      700: \"#303F9F\",\r\n      800: \"#283593\",\r\n      900: \"#1A237E\",\r\n      950: \"#0d123f\"\r\n    },\r\n    violet: {\r\n      50: \"#EDE7F6\",\r\n      100: \"#D1C4E9\",\r\n      200: \"#B39DDB\",\r\n      300: \"#9575CD\",\r\n      400: \"#7E57C2\",\r\n      500: \"#673AB7\",\r\n      600: \"#5E35B1\",\r\n      700: \"#512DA8\",\r\n      800: \"#4527A0\",\r\n      900: \"#311B92\",\r\n      950: \"#190e49\"\r\n    },\r\n    purple: {\r\n      50: \"#F3E5F5\",\r\n      100: \"#E1BEE7\",\r\n      200: \"#CE93D8\",\r\n      300: \"#BA68C8\",\r\n      400: \"#AB47BC\",\r\n      500: \"#9C27B0\",\r\n      600: \"#8E24AA\",\r\n      700: \"#7B1FA2\",\r\n      800: \"#6A1B9A\",\r\n      900: \"#4A148C\",\r\n      950: \"#250a46\"\r\n    },\r\n    fuchsia: {\r\n      50: \"#FDE6F3\",\r\n      100: \"#FBC1E3\",\r\n      200: \"#F897D1\",\r\n      300: \"#F56DBF\",\r\n      400: \"#F34DB2\",\r\n      500: \"#F12DA5\",\r\n      600: \"#E0289D\",\r\n      700: \"#CC2392\",\r\n      800: \"#B81E88\",\r\n      900: \"#951777\",\r\n      950: \"#4b0c3c\"\r\n    },\r\n    pink: {\r\n      50: \"#FCE4EC\",\r\n      100: \"#F8BBD0\",\r\n      200: \"#F48FB1\",\r\n      300: \"#F06292\",\r\n      400: \"#EC407A\",\r\n      500: \"#E91E63\",\r\n      600: \"#D81B60\",\r\n      700: \"#C2185B\",\r\n      800: \"#AD1457\",\r\n      900: \"#880E4F\",\r\n      950: \"#440728\"\r\n    },\r\n    rose: {\r\n      50: \"#FFF0F0\",\r\n      100: \"#FFD9D9\",\r\n      200: \"#FFC0C0\",\r\n      300: \"#FFA7A7\",\r\n      400: \"#FF8E8E\",\r\n      500: \"#FF7575\",\r\n      600: \"#FF5252\",\r\n      700: \"#FF3838\",\r\n      800: \"#F71C1C\",\r\n      900: \"#D50000\",\r\n      950: \"#3E0000\"\r\n    },\r\n    slate: {\r\n      50: \"#f8fafc\",\r\n      100: \"#f1f5f9\",\r\n      200: \"#e2e8f0\",\r\n      300: \"#cbd5e1\",\r\n      400: \"#94a3b8\",\r\n      500: \"#64748b\",\r\n      600: \"#475569\",\r\n      700: \"#334155\",\r\n      800: \"#1e293b\",\r\n      900: \"#0f172a\",\r\n      950: \"#020617\"\r\n    },\r\n    gray: {\r\n      50: \"#f9fafb\",\r\n      100: \"#f3f4f6\",\r\n      200: \"#e5e7eb\",\r\n      300: \"#d1d5db\",\r\n      400: \"#9ca3af\",\r\n      500: \"#6b7280\",\r\n      600: \"#4b5563\",\r\n      700: \"#374151\",\r\n      800: \"#1f2937\",\r\n      900: \"#111827\",\r\n      950: \"#030712\"\r\n    },\r\n    zinc: {\r\n      50: \"#fafafa\",\r\n      100: \"#f4f4f5\",\r\n      200: \"#e4e4e7\",\r\n      300: \"#d4d4d8\",\r\n      400: \"#a1a1aa\",\r\n      500: \"#71717a\",\r\n      600: \"#52525b\",\r\n      700: \"#3f3f46\",\r\n      800: \"#27272a\",\r\n      900: \"#18181b\",\r\n      950: \"#09090b\"\r\n    },\r\n    neutral: {\r\n      50: \"#fafafa\",\r\n      100: \"#f5f5f5\",\r\n      200: \"#e5e5e5\",\r\n      300: \"#d4d4d4\",\r\n      400: \"#a3a3a3\",\r\n      500: \"#737373\",\r\n      600: \"#525252\",\r\n      700: \"#404040\",\r\n      800: \"#262626\",\r\n      900: \"#171717\",\r\n      950: \"#0a0a0a\"\r\n    },\r\n    stone: {\r\n      50: \"#fafaf9\",\r\n      100: \"#f5f5f4\",\r\n      200: \"#e7e5e4\",\r\n      300: \"#d6d3d1\",\r\n      400: \"#a8a29e\",\r\n      500: \"#78716c\",\r\n      600: \"#57534e\",\r\n      700: \"#44403c\",\r\n      800: \"#292524\",\r\n      900: \"#1c1917\",\r\n      950: \"#0c0a09\"\r\n    }\r\n  },\r\n  semantic: {\r\n\r\n    transitionDuration: '0.2s',\r\n    focusRing: {\r\n      width: \"0\",\r\n      style: \"none\",\r\n      color: \"unset\",\r\n      offset: \"0\"\r\n    },\r\n    disabledOpacity: \"0.38\",\r\n    iconSize: \"1rem\",\r\n    anchorGutter: \"0\",\r\n    primary: {\r\n      50: \"#E8F6F1\",\r\n      100: \"#C5EBE1\",\r\n      200: \"#9EDFCF\",\r\n      300: \"#76D3BD\",\r\n      400: \"#58C9AF\",\r\n      500: \"#3BBFA1\",\r\n      600: \"#35AF94\",\r\n      700: \"#2D9B83\",\r\n      800: \"#268873\",\r\n      900: \"#1A6657\",\r\n      950: \"#0d3329\"\r\n    },\r\n    formField: {\r\n      paddingX: \"0.75rem\",\r\n      paddingY: \"0.75rem\",\r\n      sm: {\r\n        fontSize: \"0.875rem\",\r\n        paddingX: \"0.625rem\",\r\n        paddingY: \"0.625rem\"\r\n      },\r\n      lg: {\r\n        fontSize: \"1.125rem\",\r\n        paddingX: \"0.825rem\",\r\n        paddingY: \"0.825rem\"\r\n      },\r\n      borderRadius: \"{border.radius.sm}\",\r\n      focusRing: {\r\n        width: \"2px\",\r\n        style: \"solid\",\r\n        color: \"{primary.color}\",\r\n        offset: \"-2px\",\r\n        shadow: \"none\"\r\n      },\r\n      transitionDuration: \"{transition.duration}\"\r\n    },\r\n    list: {\r\n      padding: \"0.5rem 0\",\r\n      gap: \"0\",\r\n      header: {\r\n        padding: \"0.75rem 1rem\"\r\n      },\r\n      option: {\r\n        padding: \"0.75rem 1rem\",\r\n        borderRadius: \"{border.radius.none}\"\r\n      },\r\n      optionGroup: {\r\n        padding: \"0.75rem 1rem\",\r\n        fontWeight: \"700\"\r\n      }\r\n    },\r\n    content: {\r\n      borderRadius: \"{border.radius.sm}\"\r\n    },\r\n    mask: {\r\n      transitionDuration: \"0.15s\"\r\n    },\r\n    navigation: {\r\n      list: {\r\n        padding: \"0.5rem 0\",\r\n        gap: \"0\"\r\n      },\r\n      item: {\r\n        padding: \"0.75rem 1rem\",\r\n        borderRadius: \"{border.radius.none}\",\r\n        gap: \"0.5rem\"\r\n      },\r\n      submenuLabel: {\r\n        padding: \"0.75rem 1rem\",\r\n        fontWeight: \"700\"\r\n      },\r\n      submenuIcon: {\r\n        size: \"0.875rem\"\r\n      }\r\n    },\r\n    overlay: {\r\n      select: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        shadow: \"0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)\"\r\n      },\r\n      popover: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        padding: \"1rem\",\r\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\r\n      },\r\n      modal: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        padding: \"1.5rem\",\r\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\r\n      },\r\n      navigation: {\r\n        shadow: \"0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)\"\r\n      }\r\n    },\r\n    colorScheme: {\r\n      light: {\r\n        focusRing: {\r\n          shadow: \"0 0 1px 4px {surface.200}\"\r\n        },\r\n        surface: {\r\n          0: \"#ffffff\",\r\n          50: \"#f8fafc\",\r\n          100: \"#f1f5f9\",\r\n          200: \"#e2e8f0\",\r\n          300: \"#cbd5e1\",\r\n          400: \"#94a3b8\",\r\n          500: \"#64748b\",\r\n          600: \"#475569\",\r\n          700: \"#334155\",\r\n          800: \"#1e293b\",\r\n          900: \"#0f172a\",\r\n          950: \"#020617\"\r\n        },\r\n        primary: {\r\n          color: \"{primary.500}\",\r\n          contrastColor: \"#ffffff\",\r\n          hoverColor: \"{primary.400}\",\r\n          activeColor: \"{primary.300}\"\r\n        },\r\n        highlight: {\r\n          background: \"color-mix(in srgb, {primary.color}, transparent 88%)\",\r\n          focusBackground: \"color-mix(in srgb, {primary.color}, transparent 76%)\",\r\n          color: \"{primary.700}\",\r\n          focusColor: \"{primary.800}\"\r\n        },\r\n        mask: {\r\n          background: \"rgba(0,0,0,0.32)\",\r\n          color: \"{surface.200}\"\r\n        },\r\n        formField: {\r\n          background: \"{surface.0}\",\r\n          disabledBackground: \"{surface.300}\",\r\n          filledBackground: \"{surface.100}\",\r\n          filledHoverBackground: \"{surface.200}\",\r\n          filledFocusBackground: \"{surface.100}\",\r\n          borderColor: \"{surface.400}\",\r\n          hoverBorderColor: \"{surface.900}\",\r\n          focusBorderColor: \"{primary.color}\",\r\n          invalidBorderColor: \"{red.800}\",\r\n          color: \"{surface.900}\",\r\n          disabledColor: \"{surface.600}\",\r\n          placeholderColor: \"{surface.600}\",\r\n          invalidPlaceholderColor: \"{red.800}\",\r\n          floatLabelColor: \"{surface.600}\",\r\n          floatLabelFocusColor: \"{primary.600}\",\r\n          floatLabelActiveColor: \"{surface.600}\",\r\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\r\n          iconColor: \"{surface.600}\",\r\n          shadow: \"none\"\r\n        },\r\n        text: {\r\n          color: \"{surface.900}\",\r\n          hoverColor: \"{surface.900}\",\r\n          mutedColor: \"{surface.600}\",\r\n          hoverMutedColor: \"{surface.600}\"\r\n        },\r\n        content: {\r\n          background: \"{surface.0}\",\r\n          hoverBackground: \"{surface.100}\",\r\n          borderColor: \"{surface.300}\",\r\n          color: \"{text.color}\",\r\n          hoverColor: \"{text.hover.color}\"\r\n        },\r\n        overlay: {\r\n          select: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          popover: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          modal: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        list: {\r\n          option: {\r\n            focusBackground: \"{surface.100}\",\r\n            selectedBackground: \"{highlight.background}\",\r\n            selectedFocusBackground: \"{highlight.focus.background}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            selectedColor: \"{highlight.color}\",\r\n            selectedFocusColor: \"{highlight.focus.color}\",\r\n            icon: {\r\n              color: \"{surface.600}\",\r\n              focusColor: \"{surface.600}\"\r\n            }\r\n          },\r\n          optionGroup: {\r\n            background: \"transparent\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        navigation: {\r\n          item: {\r\n            focusBackground: \"{surface.100}\",\r\n            activeBackground: \"{surface.200}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            activeColor: \"{text.hover.color}\",\r\n            icon: {\r\n              color: \"{surface.600}\",\r\n              focusColor: \"{surface.600}\",\r\n              activeColor: \"{surface.600}\"\r\n            }\r\n          },\r\n          submenuLabel: {\r\n            background: \"transparent\",\r\n            color: \"{text.color}\"\r\n          },\r\n          submenuIcon: {\r\n            color: \"{surface.600}\",\r\n            focusColor: \"{surface.600}\",\r\n            activeColor: \"{surface.600}\"\r\n          }\r\n        }\r\n      },\r\n      dark: {\r\n        focusRing: {\r\n          shadow: \"0 0 1px 4px {surface.700}\"\r\n        },\r\n        surface: {\r\n          0: \"#ffffff\",\r\n          50: \"#fef2f3\",\r\n          100: \"#fac2c3\",\r\n          200: \"#f69294\",\r\n          300: \"#f36265\",\r\n          400: \"#ef3136\",\r\n          500: \"#eb0107\",\r\n          600: \"#c80106\",\r\n          700: \"#a50105\",\r\n          800: \"#810104\",\r\n          900: \"#5e0003\",\r\n          950: \"#3b0002\"\r\n        },\r\n        primary: {\r\n          color: \"{primary.400}\",\r\n          contrastColor: \"{surface.900}\",\r\n          hoverColor: \"{primary.300}\",\r\n          activeColor: \"{primary.200}\"\r\n        },\r\n        highlight: {\r\n          background: \"color-mix(in srgb, {primary.400}, transparent 84%)\",\r\n          focusBackground: \"color-mix(in srgb, {primary.400}, transparent 76%)\",\r\n          color: \"rgba(255,255,255,.87)\",\r\n          focusColor: \"rgba(255,255,255,.87)\"\r\n        },\r\n        mask: {\r\n          background: \"rgba(0,0,0,0.6)\",\r\n          color: \"{surface.200}\"\r\n        },\r\n        formField: {\r\n          background: \"{surface.950}\",\r\n          disabledBackground: \"{surface.700}\",\r\n          filledBackground: \"{surface.800}\",\r\n          filledHoverBackground: \"{surface.700}\",\r\n          filledFocusBackground: \"{surface.800}\",\r\n          borderColor: \"{surface.600}\",\r\n          hoverBorderColor: \"{surface.400}\",\r\n          focusBorderColor: \"{primary.color}\",\r\n          invalidBorderColor: \"{red.300}\",\r\n          color: \"{surface.0}\",\r\n          disabledColor: \"{surface.400}\",\r\n          placeholderColor: \"{surface.400}\",\r\n          invalidPlaceholderColor: \"{red.300}\",\r\n          floatLabelColor: \"{surface.400}\",\r\n          floatLabelFocusColor: \"{primary.color}\",\r\n          floatLabelActiveColor: \"{surface.400}\",\r\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\r\n          iconColor: \"{surface.400}\",\r\n          shadow: \"none\"\r\n        },\r\n        text: {\r\n          color: \"{surface.0}\",\r\n          hoverColor: \"{surface.0}\",\r\n          mutedColor: \"{surface.400}\",\r\n          hoverMutedColor: \"{surface.400}\"\r\n        },\r\n        content: {\r\n          background: \"{surface.900}\",\r\n          hoverBackground: \"{surface.800}\",\r\n          borderColor: \"{surface.700}\",\r\n          color: \"{text.color}\",\r\n          hoverColor: \"{text.hover.color}\"\r\n        },\r\n        overlay: {\r\n          select: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          popover: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          modal: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        list: {\r\n          option: {\r\n            focusBackground: \"{surface.800}\",\r\n            selectedBackground: \"{highlight.background}\",\r\n            selectedFocusBackground: \"{highlight.focus.background}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            selectedColor: \"{highlight.color}\",\r\n            selectedFocusColor: \"{highlight.focus.color}\",\r\n            icon: {\r\n              color: \"{surface.400}\",\r\n              focusColor: \"{surface.400}\"\r\n            }\r\n          },\r\n          optionGroup: {\r\n            background: \"transparent\",\r\n            color: \"{text.muted.color}\"\r\n          }\r\n        },\r\n        navigation: {\r\n          item: {\r\n            focusBackground: \"{surface.800}\",\r\n            activeBackground: \"{surface.700}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            activeColor: \"{text.hover.color}\",\r\n            icon: {\r\n              color: \"{surface.400}\",\r\n              focusColor: \"{surface.400}\",\r\n              activeColor: \"{surface.400}\"\r\n            }\r\n          },\r\n          submenuLabel: {\r\n            background: \"transparent\",\r\n            color: \"{text.muted.color}\"\r\n          },\r\n          submenuIcon: {\r\n            color: \"{surface.400}\",\r\n            focusColor: \"{surface.400}\",\r\n            activeColor: \"{surface.400}\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n} as MaterialBaseDesignTokens)"
            },
            {
                "name": "validate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({eventCoalescing: true}),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    importProvidersFrom(MatNativeDateModule),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Nora,\r\n        options: {\r\n        darkModeSelector: '.my-app-dark'\r\n        }\r\n\r\n      }\r\n    }),\r\n\r\n  ]\r\n}"
                }
            ],
            "src/app/app.component.ts": [
                {
                    "name": "format",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDateFormats",
                    "defaultValue": "{\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}"
                },
                {
                    "name": "validate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}"
                }
            ],
            "src/app/prime-theme.ts": [
                {
                    "name": "MyPreset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/prime-theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MaterialBaseDesignTokens",
                    "defaultValue": "definePreset(Material, {\r\n  primitive: {\r\n    borderRadius: {\r\n      none: \"0\",\r\n      xs: \"2px\",\r\n      sm: \"4px\",\r\n      md: \"6px\",\r\n      lg: \"8px\",\r\n      xl: \"12px\"\r\n    },\r\n    emerald: {\r\n      50: \"#E8F6F1\",\r\n      100: \"#C5EBE1\",\r\n      200: \"#9EDFCF\",\r\n      300: \"#76D3BD\",\r\n      400: \"#58C9AF\",\r\n      500: \"#3BBFA1\",\r\n      600: \"#35AF94\",\r\n      700: \"#2D9B83\",\r\n      800: \"#268873\",\r\n      900: \"#1A6657\",\r\n      950: \"#0d3329\"\r\n    },\r\n    green: {\r\n      50: \"#E8F5E9\",\r\n      100: \"#C8E6C9\",\r\n      200: \"#A5D6A7\",\r\n      300: \"#81C784\",\r\n      400: \"#66BB6A\",\r\n      500: \"#4CAF50\",\r\n      600: \"#43A047\",\r\n      700: \"#388E3C\",\r\n      800: \"#2E7D32\",\r\n      900: \"#1B5E20\",\r\n      950: \"#0e2f10\"\r\n    },\r\n    lime: {\r\n      50: \"#F9FBE7\",\r\n      100: \"#F0F4C3\",\r\n      200: \"#E6EE9C\",\r\n      300: \"#DCE775\",\r\n      400: \"#D4E157\",\r\n      500: \"#CDDC39\",\r\n      600: \"#C0CA33\",\r\n      700: \"#AFB42B\",\r\n      800: \"#9E9D24\",\r\n      900: \"#827717\",\r\n      950: \"#413c0c\"\r\n    },\r\n    red: {\r\n      50: \"#FFEBEE\",\r\n      100: \"#FFCDD2\",\r\n      200: \"#EF9A9A\",\r\n      300: \"#E57373\",\r\n      400: \"#EF5350\",\r\n      500: \"#F44336\",\r\n      600: \"#E53935\",\r\n      700: \"#D32F2F\",\r\n      800: \"#C62828\",\r\n      900: \"#B71C1C\",\r\n      950: \"#5c0e0e\"\r\n    },\r\n    orange: {\r\n      50: \"#FFF3E0\",\r\n      100: \"#FFE0B2\",\r\n      200: \"#FFCC80\",\r\n      300: \"#FFB74D\",\r\n      400: \"#FFA726\",\r\n      500: \"#FF9800\",\r\n      600: \"#FB8C00\",\r\n      700: \"#F57C00\",\r\n      800: \"#EF6C00\",\r\n      900: \"#E65100\",\r\n      950: \"#732900\"\r\n    },\r\n    amber: {\r\n      50: \"#FFF8E1\",\r\n      100: \"#FFECB3\",\r\n      200: \"#FFE082\",\r\n      300: \"#FFD54F\",\r\n      400: \"#FFCA28\",\r\n      500: \"#FFC107\",\r\n      600: \"#FFB300\",\r\n      700: \"#FFA000\",\r\n      800: \"#FF8F00\",\r\n      900: \"#FF6F00\",\r\n      950: \"#803800\"\r\n    },\r\n    yellow: {\r\n      50: \"#FFFDE7\",\r\n      100: \"#FFF9C4\",\r\n      200: \"#FFF59D\",\r\n      300: \"#FFF176\",\r\n      400: \"#FFEE58\",\r\n      500: \"#FFEB3B\",\r\n      600: \"#FDD835\",\r\n      700: \"#FBC02D\",\r\n      800: \"#F9A825\",\r\n      900: \"#F57F17\",\r\n      950: \"#7b400c\"\r\n    },\r\n    teal: {\r\n      50: \"#E0F2F1\",\r\n      100: \"#B2DFDB\",\r\n      200: \"#80CBC4\",\r\n      300: \"#4DB6AC\",\r\n      400: \"#26A69A\",\r\n      500: \"#009688\",\r\n      600: \"#00897B\",\r\n      700: \"#00796B\",\r\n      800: \"#00695C\",\r\n      900: \"#004D40\",\r\n      950: \"#002720\"\r\n    },\r\n    cyan: {\r\n      50: \"#E0F7FA\",\r\n      100: \"#B2EBF2\",\r\n      200: \"#80DEEA\",\r\n      300: \"#4DD0E1\",\r\n      400: \"#26C6DA\",\r\n      500: \"#00BCD4\",\r\n      600: \"#00ACC1\",\r\n      700: \"#0097A7\",\r\n      800: \"#00838F\",\r\n      900: \"#006064\",\r\n      950: \"#003032\"\r\n    },\r\n    sky: {\r\n      50: \"#E1F5FE\",\r\n      100: \"#B3E5FC\",\r\n      200: \"#81D4FA\",\r\n      300: \"#4FC3F7\",\r\n      400: \"#29B6F6\",\r\n      500: \"#03A9F4\",\r\n      600: \"#039BE5\",\r\n      700: \"#0288D1\",\r\n      800: \"#0277BD\",\r\n      900: \"#01579B\",\r\n      950: \"#012c4e\"\r\n    },\r\n    blue: {\r\n      50: \"#E3F2FD\",\r\n      100: \"#BBDEFB\",\r\n      200: \"#90CAF9\",\r\n      300: \"#64B5F6\",\r\n      400: \"#42A5F5\",\r\n      500: \"#2196F3\",\r\n      600: \"#1E88E5\",\r\n      700: \"#1976D2\",\r\n      800: \"#1565C0\",\r\n      900: \"#0D47A1\",\r\n      950: \"#072451\"\r\n    },\r\n    indigo: {\r\n      50: \"#E8EAF6\",\r\n      100: \"#C5CAE9\",\r\n      200: \"#9FA8DA\",\r\n      300: \"#7986CB\",\r\n      400: \"#5C6BC0\",\r\n      500: \"#3F51B5\",\r\n      600: \"#3949AB\",\r\n      700: \"#303F9F\",\r\n      800: \"#283593\",\r\n      900: \"#1A237E\",\r\n      950: \"#0d123f\"\r\n    },\r\n    violet: {\r\n      50: \"#EDE7F6\",\r\n      100: \"#D1C4E9\",\r\n      200: \"#B39DDB\",\r\n      300: \"#9575CD\",\r\n      400: \"#7E57C2\",\r\n      500: \"#673AB7\",\r\n      600: \"#5E35B1\",\r\n      700: \"#512DA8\",\r\n      800: \"#4527A0\",\r\n      900: \"#311B92\",\r\n      950: \"#190e49\"\r\n    },\r\n    purple: {\r\n      50: \"#F3E5F5\",\r\n      100: \"#E1BEE7\",\r\n      200: \"#CE93D8\",\r\n      300: \"#BA68C8\",\r\n      400: \"#AB47BC\",\r\n      500: \"#9C27B0\",\r\n      600: \"#8E24AA\",\r\n      700: \"#7B1FA2\",\r\n      800: \"#6A1B9A\",\r\n      900: \"#4A148C\",\r\n      950: \"#250a46\"\r\n    },\r\n    fuchsia: {\r\n      50: \"#FDE6F3\",\r\n      100: \"#FBC1E3\",\r\n      200: \"#F897D1\",\r\n      300: \"#F56DBF\",\r\n      400: \"#F34DB2\",\r\n      500: \"#F12DA5\",\r\n      600: \"#E0289D\",\r\n      700: \"#CC2392\",\r\n      800: \"#B81E88\",\r\n      900: \"#951777\",\r\n      950: \"#4b0c3c\"\r\n    },\r\n    pink: {\r\n      50: \"#FCE4EC\",\r\n      100: \"#F8BBD0\",\r\n      200: \"#F48FB1\",\r\n      300: \"#F06292\",\r\n      400: \"#EC407A\",\r\n      500: \"#E91E63\",\r\n      600: \"#D81B60\",\r\n      700: \"#C2185B\",\r\n      800: \"#AD1457\",\r\n      900: \"#880E4F\",\r\n      950: \"#440728\"\r\n    },\r\n    rose: {\r\n      50: \"#FFF0F0\",\r\n      100: \"#FFD9D9\",\r\n      200: \"#FFC0C0\",\r\n      300: \"#FFA7A7\",\r\n      400: \"#FF8E8E\",\r\n      500: \"#FF7575\",\r\n      600: \"#FF5252\",\r\n      700: \"#FF3838\",\r\n      800: \"#F71C1C\",\r\n      900: \"#D50000\",\r\n      950: \"#3E0000\"\r\n    },\r\n    slate: {\r\n      50: \"#f8fafc\",\r\n      100: \"#f1f5f9\",\r\n      200: \"#e2e8f0\",\r\n      300: \"#cbd5e1\",\r\n      400: \"#94a3b8\",\r\n      500: \"#64748b\",\r\n      600: \"#475569\",\r\n      700: \"#334155\",\r\n      800: \"#1e293b\",\r\n      900: \"#0f172a\",\r\n      950: \"#020617\"\r\n    },\r\n    gray: {\r\n      50: \"#f9fafb\",\r\n      100: \"#f3f4f6\",\r\n      200: \"#e5e7eb\",\r\n      300: \"#d1d5db\",\r\n      400: \"#9ca3af\",\r\n      500: \"#6b7280\",\r\n      600: \"#4b5563\",\r\n      700: \"#374151\",\r\n      800: \"#1f2937\",\r\n      900: \"#111827\",\r\n      950: \"#030712\"\r\n    },\r\n    zinc: {\r\n      50: \"#fafafa\",\r\n      100: \"#f4f4f5\",\r\n      200: \"#e4e4e7\",\r\n      300: \"#d4d4d8\",\r\n      400: \"#a1a1aa\",\r\n      500: \"#71717a\",\r\n      600: \"#52525b\",\r\n      700: \"#3f3f46\",\r\n      800: \"#27272a\",\r\n      900: \"#18181b\",\r\n      950: \"#09090b\"\r\n    },\r\n    neutral: {\r\n      50: \"#fafafa\",\r\n      100: \"#f5f5f5\",\r\n      200: \"#e5e5e5\",\r\n      300: \"#d4d4d4\",\r\n      400: \"#a3a3a3\",\r\n      500: \"#737373\",\r\n      600: \"#525252\",\r\n      700: \"#404040\",\r\n      800: \"#262626\",\r\n      900: \"#171717\",\r\n      950: \"#0a0a0a\"\r\n    },\r\n    stone: {\r\n      50: \"#fafaf9\",\r\n      100: \"#f5f5f4\",\r\n      200: \"#e7e5e4\",\r\n      300: \"#d6d3d1\",\r\n      400: \"#a8a29e\",\r\n      500: \"#78716c\",\r\n      600: \"#57534e\",\r\n      700: \"#44403c\",\r\n      800: \"#292524\",\r\n      900: \"#1c1917\",\r\n      950: \"#0c0a09\"\r\n    }\r\n  },\r\n  semantic: {\r\n\r\n    transitionDuration: '0.2s',\r\n    focusRing: {\r\n      width: \"0\",\r\n      style: \"none\",\r\n      color: \"unset\",\r\n      offset: \"0\"\r\n    },\r\n    disabledOpacity: \"0.38\",\r\n    iconSize: \"1rem\",\r\n    anchorGutter: \"0\",\r\n    primary: {\r\n      50: \"#E8F6F1\",\r\n      100: \"#C5EBE1\",\r\n      200: \"#9EDFCF\",\r\n      300: \"#76D3BD\",\r\n      400: \"#58C9AF\",\r\n      500: \"#3BBFA1\",\r\n      600: \"#35AF94\",\r\n      700: \"#2D9B83\",\r\n      800: \"#268873\",\r\n      900: \"#1A6657\",\r\n      950: \"#0d3329\"\r\n    },\r\n    formField: {\r\n      paddingX: \"0.75rem\",\r\n      paddingY: \"0.75rem\",\r\n      sm: {\r\n        fontSize: \"0.875rem\",\r\n        paddingX: \"0.625rem\",\r\n        paddingY: \"0.625rem\"\r\n      },\r\n      lg: {\r\n        fontSize: \"1.125rem\",\r\n        paddingX: \"0.825rem\",\r\n        paddingY: \"0.825rem\"\r\n      },\r\n      borderRadius: \"{border.radius.sm}\",\r\n      focusRing: {\r\n        width: \"2px\",\r\n        style: \"solid\",\r\n        color: \"{primary.color}\",\r\n        offset: \"-2px\",\r\n        shadow: \"none\"\r\n      },\r\n      transitionDuration: \"{transition.duration}\"\r\n    },\r\n    list: {\r\n      padding: \"0.5rem 0\",\r\n      gap: \"0\",\r\n      header: {\r\n        padding: \"0.75rem 1rem\"\r\n      },\r\n      option: {\r\n        padding: \"0.75rem 1rem\",\r\n        borderRadius: \"{border.radius.none}\"\r\n      },\r\n      optionGroup: {\r\n        padding: \"0.75rem 1rem\",\r\n        fontWeight: \"700\"\r\n      }\r\n    },\r\n    content: {\r\n      borderRadius: \"{border.radius.sm}\"\r\n    },\r\n    mask: {\r\n      transitionDuration: \"0.15s\"\r\n    },\r\n    navigation: {\r\n      list: {\r\n        padding: \"0.5rem 0\",\r\n        gap: \"0\"\r\n      },\r\n      item: {\r\n        padding: \"0.75rem 1rem\",\r\n        borderRadius: \"{border.radius.none}\",\r\n        gap: \"0.5rem\"\r\n      },\r\n      submenuLabel: {\r\n        padding: \"0.75rem 1rem\",\r\n        fontWeight: \"700\"\r\n      },\r\n      submenuIcon: {\r\n        size: \"0.875rem\"\r\n      }\r\n    },\r\n    overlay: {\r\n      select: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        shadow: \"0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)\"\r\n      },\r\n      popover: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        padding: \"1rem\",\r\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\r\n      },\r\n      modal: {\r\n        borderRadius: \"{border.radius.sm}\",\r\n        padding: \"1.5rem\",\r\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\r\n      },\r\n      navigation: {\r\n        shadow: \"0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)\"\r\n      }\r\n    },\r\n    colorScheme: {\r\n      light: {\r\n        focusRing: {\r\n          shadow: \"0 0 1px 4px {surface.200}\"\r\n        },\r\n        surface: {\r\n          0: \"#ffffff\",\r\n          50: \"#f8fafc\",\r\n          100: \"#f1f5f9\",\r\n          200: \"#e2e8f0\",\r\n          300: \"#cbd5e1\",\r\n          400: \"#94a3b8\",\r\n          500: \"#64748b\",\r\n          600: \"#475569\",\r\n          700: \"#334155\",\r\n          800: \"#1e293b\",\r\n          900: \"#0f172a\",\r\n          950: \"#020617\"\r\n        },\r\n        primary: {\r\n          color: \"{primary.500}\",\r\n          contrastColor: \"#ffffff\",\r\n          hoverColor: \"{primary.400}\",\r\n          activeColor: \"{primary.300}\"\r\n        },\r\n        highlight: {\r\n          background: \"color-mix(in srgb, {primary.color}, transparent 88%)\",\r\n          focusBackground: \"color-mix(in srgb, {primary.color}, transparent 76%)\",\r\n          color: \"{primary.700}\",\r\n          focusColor: \"{primary.800}\"\r\n        },\r\n        mask: {\r\n          background: \"rgba(0,0,0,0.32)\",\r\n          color: \"{surface.200}\"\r\n        },\r\n        formField: {\r\n          background: \"{surface.0}\",\r\n          disabledBackground: \"{surface.300}\",\r\n          filledBackground: \"{surface.100}\",\r\n          filledHoverBackground: \"{surface.200}\",\r\n          filledFocusBackground: \"{surface.100}\",\r\n          borderColor: \"{surface.400}\",\r\n          hoverBorderColor: \"{surface.900}\",\r\n          focusBorderColor: \"{primary.color}\",\r\n          invalidBorderColor: \"{red.800}\",\r\n          color: \"{surface.900}\",\r\n          disabledColor: \"{surface.600}\",\r\n          placeholderColor: \"{surface.600}\",\r\n          invalidPlaceholderColor: \"{red.800}\",\r\n          floatLabelColor: \"{surface.600}\",\r\n          floatLabelFocusColor: \"{primary.600}\",\r\n          floatLabelActiveColor: \"{surface.600}\",\r\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\r\n          iconColor: \"{surface.600}\",\r\n          shadow: \"none\"\r\n        },\r\n        text: {\r\n          color: \"{surface.900}\",\r\n          hoverColor: \"{surface.900}\",\r\n          mutedColor: \"{surface.600}\",\r\n          hoverMutedColor: \"{surface.600}\"\r\n        },\r\n        content: {\r\n          background: \"{surface.0}\",\r\n          hoverBackground: \"{surface.100}\",\r\n          borderColor: \"{surface.300}\",\r\n          color: \"{text.color}\",\r\n          hoverColor: \"{text.hover.color}\"\r\n        },\r\n        overlay: {\r\n          select: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          popover: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          modal: {\r\n            background: \"{surface.0}\",\r\n            borderColor: \"{surface.0}\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        list: {\r\n          option: {\r\n            focusBackground: \"{surface.100}\",\r\n            selectedBackground: \"{highlight.background}\",\r\n            selectedFocusBackground: \"{highlight.focus.background}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            selectedColor: \"{highlight.color}\",\r\n            selectedFocusColor: \"{highlight.focus.color}\",\r\n            icon: {\r\n              color: \"{surface.600}\",\r\n              focusColor: \"{surface.600}\"\r\n            }\r\n          },\r\n          optionGroup: {\r\n            background: \"transparent\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        navigation: {\r\n          item: {\r\n            focusBackground: \"{surface.100}\",\r\n            activeBackground: \"{surface.200}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            activeColor: \"{text.hover.color}\",\r\n            icon: {\r\n              color: \"{surface.600}\",\r\n              focusColor: \"{surface.600}\",\r\n              activeColor: \"{surface.600}\"\r\n            }\r\n          },\r\n          submenuLabel: {\r\n            background: \"transparent\",\r\n            color: \"{text.color}\"\r\n          },\r\n          submenuIcon: {\r\n            color: \"{surface.600}\",\r\n            focusColor: \"{surface.600}\",\r\n            activeColor: \"{surface.600}\"\r\n          }\r\n        }\r\n      },\r\n      dark: {\r\n        focusRing: {\r\n          shadow: \"0 0 1px 4px {surface.700}\"\r\n        },\r\n        surface: {\r\n          0: \"#ffffff\",\r\n          50: \"#fef2f3\",\r\n          100: \"#fac2c3\",\r\n          200: \"#f69294\",\r\n          300: \"#f36265\",\r\n          400: \"#ef3136\",\r\n          500: \"#eb0107\",\r\n          600: \"#c80106\",\r\n          700: \"#a50105\",\r\n          800: \"#810104\",\r\n          900: \"#5e0003\",\r\n          950: \"#3b0002\"\r\n        },\r\n        primary: {\r\n          color: \"{primary.400}\",\r\n          contrastColor: \"{surface.900}\",\r\n          hoverColor: \"{primary.300}\",\r\n          activeColor: \"{primary.200}\"\r\n        },\r\n        highlight: {\r\n          background: \"color-mix(in srgb, {primary.400}, transparent 84%)\",\r\n          focusBackground: \"color-mix(in srgb, {primary.400}, transparent 76%)\",\r\n          color: \"rgba(255,255,255,.87)\",\r\n          focusColor: \"rgba(255,255,255,.87)\"\r\n        },\r\n        mask: {\r\n          background: \"rgba(0,0,0,0.6)\",\r\n          color: \"{surface.200}\"\r\n        },\r\n        formField: {\r\n          background: \"{surface.950}\",\r\n          disabledBackground: \"{surface.700}\",\r\n          filledBackground: \"{surface.800}\",\r\n          filledHoverBackground: \"{surface.700}\",\r\n          filledFocusBackground: \"{surface.800}\",\r\n          borderColor: \"{surface.600}\",\r\n          hoverBorderColor: \"{surface.400}\",\r\n          focusBorderColor: \"{primary.color}\",\r\n          invalidBorderColor: \"{red.300}\",\r\n          color: \"{surface.0}\",\r\n          disabledColor: \"{surface.400}\",\r\n          placeholderColor: \"{surface.400}\",\r\n          invalidPlaceholderColor: \"{red.300}\",\r\n          floatLabelColor: \"{surface.400}\",\r\n          floatLabelFocusColor: \"{primary.color}\",\r\n          floatLabelActiveColor: \"{surface.400}\",\r\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\r\n          iconColor: \"{surface.400}\",\r\n          shadow: \"none\"\r\n        },\r\n        text: {\r\n          color: \"{surface.0}\",\r\n          hoverColor: \"{surface.0}\",\r\n          mutedColor: \"{surface.400}\",\r\n          hoverMutedColor: \"{surface.400}\"\r\n        },\r\n        content: {\r\n          background: \"{surface.900}\",\r\n          hoverBackground: \"{surface.800}\",\r\n          borderColor: \"{surface.700}\",\r\n          color: \"{text.color}\",\r\n          hoverColor: \"{text.hover.color}\"\r\n        },\r\n        overlay: {\r\n          select: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          popover: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          },\r\n          modal: {\r\n            background: \"{surface.900}\",\r\n            borderColor: \"{surface.900}\",\r\n            color: \"{text.color}\"\r\n          }\r\n        },\r\n        list: {\r\n          option: {\r\n            focusBackground: \"{surface.800}\",\r\n            selectedBackground: \"{highlight.background}\",\r\n            selectedFocusBackground: \"{highlight.focus.background}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            selectedColor: \"{highlight.color}\",\r\n            selectedFocusColor: \"{highlight.focus.color}\",\r\n            icon: {\r\n              color: \"{surface.400}\",\r\n              focusColor: \"{surface.400}\"\r\n            }\r\n          },\r\n          optionGroup: {\r\n            background: \"transparent\",\r\n            color: \"{text.muted.color}\"\r\n          }\r\n        },\r\n        navigation: {\r\n          item: {\r\n            focusBackground: \"{surface.800}\",\r\n            activeBackground: \"{surface.700}\",\r\n            color: \"{text.color}\",\r\n            focusColor: \"{text.hover.color}\",\r\n            activeColor: \"{text.hover.color}\",\r\n            icon: {\r\n              color: \"{surface.400}\",\r\n              focusColor: \"{surface.400}\",\r\n              activeColor: \"{surface.400}\"\r\n            }\r\n          },\r\n          submenuLabel: {\r\n            background: \"transparent\",\r\n            color: \"{text.muted.color}\"\r\n          },\r\n          submenuIcon: {\r\n            color: \"{surface.400}\",\r\n            focusColor: \"{surface.400}\",\r\n            activeColor: \"{surface.400}\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n} as MaterialBaseDesignTokens)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "format",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/clarity-trial/clarity-trial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClarityTrialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/combobox/combobox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/primeng/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/primeng/prime-input/prime-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrimeInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/prime-theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MyPreset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}