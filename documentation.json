{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c99c1ef606bdd2208bb35b367cf315ebbbf0a5b2f145086999b1fdba1a5c7796b45e9654186128955c14dc5bd7870b7f2bd3a4a068e33d2660fc8d60123af272",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: MAT_DATE_FORMATS, useValue: format,\n}"
                }
            ],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl<Date | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "title",
                    "defaultValue": "'date-omg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ClarityTrialComponent",
                    "type": "component"
                },
                {
                    "name": "ComboboxComponent",
                    "type": "component"
                },
                {
                    "name": "PrimeInputComponent",
                    "type": "component"
                },
                {
                    "name": "Button"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {RouterOutlet} from '@angular/router';\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatDateFormats, MatNativeDateModule,\r\n  NativeDateAdapter,\r\n  provideNativeDateAdapter\r\n} from '@angular/material/core';\r\nimport {FormControl, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\r\nimport {MAT_DATEPICKER_VALIDATORS, MatDatepicker, MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {provideAnimationsAsync} from '@angular/platform-browser/animations/async';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {CommonModule} from '@angular/common';\r\nimport dayjs from 'dayjs';\r\nimport {ClarityTrialComponent} from './comps/clarity-trial/clarity-trial.component';\r\nimport {ComboboxComponent} from './comps/combobox/combobox.component';\r\nimport {PrimeInputComponent} from './comps/primeng/prime-input/prime-input.component';\r\nimport {Button} from 'primeng/button';\r\n\r\nconst format: MatDateFormats = {\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}\r\n\r\nconst validate = (control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ClarityTrialComponent,\r\n    ComboboxComponent, PrimeInputComponent, Button\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n  providers: [\r\n    {\r\n      provide: MAT_DATE_FORMATS, useValue: format,\r\n    }\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'date-omg';\r\n  control: FormControl<Date | null>;\r\n\r\n  constructor() {\r\n\r\n    this.control = new FormControl(new Date(\"02/02/2024 00:00:00\"), [validate]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.control.setValue(new Date(\"02/02/2024 00:00:00\"))\r\n    this.control.valueChanges.subscribe(val => {\r\n      console.log(val);\r\n    })\r\n  }\r\n\r\n\r\n  toggleTheme() {\r\n    const element = document.querySelector('html');\r\n    element.classList.toggle('my-app-dark');\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 70
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <p-button (onClick)=\"toggleTheme()\"\r\n            [label]=\"'Theme toggle'\"\r\n  />\r\n\r\n  <clarity-trial [formControl]=\"control\"/>\r\n  <combobox/>\r\n  <app-prime-input/>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5747b2121bdc472b32e41e4e47db44dbd7601fe73e9c7b3d0f82e7d1aaf97be0d13d4880fee19b0e4d511178aa52a24a5a9ea3ee0034d204ffd659c0aae43e41",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 793,
                            "end": 807,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 794,
                                "end": 802,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n  type=\"button\"\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n  {{ label }}\r\n</button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /** Is this the principal call to action on the page? */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /** What background color to use */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /** How large should the button be? */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /** Optional click handler */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n.storybook-button--primary {\r\n  background-color: #555ab9;\r\n  color: white;\r\n}\r\n.storybook-button--secondary {\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n  background-color: transparent;\r\n  color: #333;\r\n}\r\n.storybook-button--small {\r\n  padding: 10px 16px;\r\n  font-size: 12px;\r\n}\r\n.storybook-button--medium {\r\n  padding: 11px 20px;\r\n  font-size: 14px;\r\n}\r\n.storybook-button--large {\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "ClarityTrialComponent",
            "id": "component-ClarityTrialComponent-306e72a71dfb5cb4496ba766cfbea27ebbffa1d92a70080f2c3c3161e6aab2ad6059d383f90dd970391b46b0cdc5939eadaf7382c8cfaa1ddf825759a45f7e3b",
            "file": "src/app/comps/clarity-trial/clarity-trial.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clarity-trial",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./clarity-trial.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "count",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "doubleCount",
                    "defaultValue": "computed(() => this.count() * 2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ClarityModule",
                    "type": "module"
                },
                {
                    "name": "InputText"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, computed, HostBinding, Input, OnInit, Signal, signal, WritableSignal} from '@angular/core';\r\nimport {ClarityModule} from '@clr/angular';\r\nimport {FormControl} from '@angular/forms';\r\nimport {InputText} from 'primeng/inputtext';\r\n\r\n@Component({\r\n  selector: 'clarity-trial',\r\n  imports: [ClarityModule, InputText],\r\n  templateUrl: './clarity-trial.component.html',\r\n  styleUrl: './clarity-trial.component.scss'\r\n})\r\nexport class ClarityTrialComponent implements OnInit {\r\n  count: WritableSignal<number> = signal(0);\r\n  doubleCount: Signal<number> = computed(() => this.count() * 2);\r\n\r\n  @Input()\r\n  set startWith(nb: number){\r\n    this._startWith = nb;\r\n    this.count.set(nb ?? 0);\r\n  };\r\n\r\n  _startWith: number;\r\n\r\n  ngOnInit() {\r\n    this.count.set(this._startWith);\r\n  }\r\n\r\n  onLick() {\r\n    this.count.update((val) => val + 5)\r\n  }\r\n}\r\n",
            "styleUrl": "./clarity-trial.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "startWith": {
                    "name": "startWith",
                    "setSignature": {
                        "name": "startWith",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nb",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "nb",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<p>clarity-trial works!</p>\r\n\r\n<input clrInput placeholder=\"Email\" name=\"name\" data-testid=\"email\"/>\r\n<input clrInput placeholder=\"Password\" name=\"name\" data-testid=\"password\"/>\r\n\r\n\r\n\r\n<button (click)=\"onLick()\"\r\n  class=\"btn btn-primary\">Primary</button>\r\n\r\n\r\n{{count()}}\r\n{{doubleCount()}}\r\n"
        },
        {
            "name": "ComboboxComponent",
            "id": "component-ComboboxComponent-c3810fa6b83267f486548c54715cfb75d050dd2e83da5b8a52f5a7d2be4095fc2ebf9504f6f4934c2df17b2e4aea3ceaef9efccf811ba47bd2c1cc637ecce4d7",
            "file": "src/app/comps/combobox/combobox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "combobox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./combobox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "states",
                    "defaultValue": "['chevre', 'mouton', 'chatton']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ClrComboboxModule",
                    "type": "module"
                },
                {
                    "name": "ClrIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {ClrComboboxModule, ClrIconModule} from '@clr/angular';\r\n\r\n@Component({\r\n  selector: 'combobox',\r\n  imports: [ClrComboboxModule, ClrIconModule],\r\n  templateUrl: './combobox.component.html',\r\n  styleUrl: './combobox.component.scss'\r\n})\r\nexport class ComboboxComponent {\r\n  states: string[] = ['chevre', 'mouton', 'chatton'];\r\n\r\n}\r\n",
            "styleUrl": "./combobox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<clr-combobox-container>\r\n  <label>My State</label>\r\n  <clr-combobox  name=\"myState\" required>\r\n    <clr-options>\r\n      <clr-option *clrOptionItems=\"let state of states; field: 'name'\" [clrValue]=\"state\">\r\n        <cds-icon shape=\"world\" role=\"img\" aria-label=\"World is turning\"></cds-icon>\r\n        {{ state }}\r\n        <cds-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></cds-icon>\r\n      </clr-option>\r\n    </clr-options>\r\n  </clr-combobox>\r\n  <clr-control-helper>Helper text</clr-control-helper>\r\n  <clr-control-error>There was an error</clr-control-error>\r\n</clr-combobox-container>\r\n"
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-b41fd2d4eba8c5ad93031b095318bc45b65eb1dc484f1c92d51d2ecc720f98f07bb8f6fef2c55210634d5313001fbfa116ab02e4a7cd0558ad88df96412b55ac",
            "file": "src/app/comps/primeng/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prime-grid",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./grid.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "TableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {TableModule} from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'prime-grid',\r\n  imports: [\r\n    TableModule\r\n  ],\r\n  templateUrl: './grid.component.html',\r\n  styleUrl: './grid.component.scss'\r\n})\r\nexport class GridComponent {\r\n\r\n}\r\n",
            "styleUrl": "./grid.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-35575735b3444c6f049822f5234963ce3b046795ea9cdf6a15e8c7d72acd8ededb78ca25c4e1fbb5f0416c5855203a87ae0483f5d065c2dfa68d5329e347a84b",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n  <div class=\"storybook-header\">\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <path\r\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n            fill=\"#FFF\"\r\n          />\r\n          <path\r\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n            fill=\"#555AB9\"\r\n          />\r\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\r\n        </g>\r\n      </svg>\r\n      <h1>Acme</h1>\r\n    </div>\r\n    <div>\r\n      <div *ngIf=\"user\">\r\n        <span class=\"welcome\">\r\n          Welcome, <b>{{ user.name }}</b\r\n          >!\r\n        </span>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n      </div>\r\n      <div *ngIf=\"!user\">\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          class=\"margin-left\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          [primary]=\"true\"\r\n          class=\"margin-left\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin: 6px 0 6px 10px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  margin-right: 10px;\r\n  color: #333;\r\n  font-size: 14px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-79bfb042a722f49579739dfd01d8f1b67681d0272a72a283c14edeb22f0462775c80ba4f7c1eb0fa4bd5fa1844083da0140980e75b5500cd98cc26421ec6d569",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n  <storybook-header\r\n    [user]=\"user\"\r\n    (onLogout)=\"doLogout()\"\r\n    (onLogin)=\"doLogin()\"\r\n    (onCreateAccount)=\"doCreateAccount()\"\r\n  ></storybook-header>\r\n  <section class=\"storybook-page\">\r\n    <h2>Pages in Storybook</h2>\r\n    <p>\r\n      We recommend building UIs with a\r\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <strong>component-driven</strong>\r\n      </a>\r\n      process starting with atomic components and ending with pages.\r\n    </p>\r\n    <p>\r\n      Render pages with mock data. This makes it easy to build and review page states without\r\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n      in Storybook:\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        Use a higher-level connected component. Storybook helps you compose such data from the\r\n        \"args\" of child component stories\r\n      </li>\r\n      <li>\r\n        Assemble data in the page component from your services. You can mock these services out\r\n        using Storybook.\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      Get a guided tutorial on component-driven development at\r\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        Storybook tutorials\r\n      </a>\r\n      . Read more in the\r\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n      .\r\n    </p>\r\n    <div class=\"tip-wrapper\">\r\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <path\r\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n            id=\"a\"\r\n            fill=\"#999\"\r\n          />\r\n        </g>\r\n      </svg>\r\n      Viewports addon in the toolbar\r\n    </div>\r\n  </section>\r\n</article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  margin: 0 auto;\r\n  padding: 48px 20px;\r\n  max-width: 600px;\r\n  color: #333;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.storybook-page h2 {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin: 0 0 4px;\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  color: inherit;\r\n}\r\n\r\n.storybook-page ul {\r\n  margin: 1em 0;\r\n  padding-left: 30px;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin-right: 10px;\r\n  border-radius: 1em;\r\n  background: #e7fdd8;\r\n  padding: 4px 12px;\r\n  color: #357a14;\r\n  font-weight: 700;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n  margin-right: 4px;\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PrimeInputComponent",
            "id": "component-PrimeInputComponent-22a899387e7b29c4fb3cc8e101a3b0b25cca8b16b593390d4f95f2756f58f70b2c8ed85c68abc7cab008142d9001bb9efc028588a7049fa9fc78d6ac735c3672",
            "file": "src/app/comps/primeng/prime-input/prime-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-prime-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./prime-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "startWith",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_startWith",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl('Default')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "InputText"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "Button"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, computed, Input, OnInit, Signal, signal, WritableSignal} from '@angular/core';\r\nimport {InputText} from 'primeng/inputtext';\r\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\r\nimport {Button} from 'primeng/button';\r\n\r\n@Component({\r\n  selector: 'app-prime-input',\r\n  imports: [\r\n    InputText,\r\n    ReactiveFormsModule,\r\n    Button\r\n  ],\r\n  templateUrl: './prime-input.component.html',\r\n  styleUrl: './prime-input.component.scss'\r\n})\r\nexport class PrimeInputComponent implements OnInit{\r\n  control: FormControl = new FormControl('Default');\r\n\r\n  @Input()\r\n  set startWith(nb: string){\r\n    this._startWith = nb;\r\n    this.control.setValue(this._startWith)\r\n  };\r\n\r\n  _startWith: string ='';\r\n\r\n  ngOnInit() {\r\n    this.control.setValue(this._startWith)\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./prime-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "startWith": {
                    "name": "startWith",
                    "setSignature": {
                        "name": "startWith",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nb",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "nb",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<label>Nique</label>\r\n\r\n<input pInputText [formControl]=\"control\" />\r\n\r\n<p-button [label]=\"'lol'\"/>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({eventCoalescing: true}),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    importProvidersFrom(MatNativeDateModule),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Nora,\r\n        options: {\r\n        darkModeSelector: '.my-app-dark'\r\n        }\r\n\r\n      }\r\n    }),\r\n\r\n  ]\r\n}"
            },
            {
                "name": "format",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatDateFormats",
                "defaultValue": "{\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}"
            },
            {
                "name": "MyPreset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/prime-theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MaterialBaseDesignTokens",
                "defaultValue": "definePreset(Material, {\n  primitive: {\n    borderRadius: {\n      none: \"0\",\n      xs: \"2px\",\n      sm: \"4px\",\n      md: \"6px\",\n      lg: \"8px\",\n      xl: \"12px\"\n    },\n    emerald: {\n      50: \"#E8F6F1\",\n      100: \"#C5EBE1\",\n      200: \"#9EDFCF\",\n      300: \"#76D3BD\",\n      400: \"#58C9AF\",\n      500: \"#3BBFA1\",\n      600: \"#35AF94\",\n      700: \"#2D9B83\",\n      800: \"#268873\",\n      900: \"#1A6657\",\n      950: \"#0d3329\"\n    },\n    green: {\n      50: \"#E8F5E9\",\n      100: \"#C8E6C9\",\n      200: \"#A5D6A7\",\n      300: \"#81C784\",\n      400: \"#66BB6A\",\n      500: \"#4CAF50\",\n      600: \"#43A047\",\n      700: \"#388E3C\",\n      800: \"#2E7D32\",\n      900: \"#1B5E20\",\n      950: \"#0e2f10\"\n    },\n    lime: {\n      50: \"#F9FBE7\",\n      100: \"#F0F4C3\",\n      200: \"#E6EE9C\",\n      300: \"#DCE775\",\n      400: \"#D4E157\",\n      500: \"#CDDC39\",\n      600: \"#C0CA33\",\n      700: \"#AFB42B\",\n      800: \"#9E9D24\",\n      900: \"#827717\",\n      950: \"#413c0c\"\n    },\n    red: {\n      50: \"#FFEBEE\",\n      100: \"#FFCDD2\",\n      200: \"#EF9A9A\",\n      300: \"#E57373\",\n      400: \"#EF5350\",\n      500: \"#F44336\",\n      600: \"#E53935\",\n      700: \"#D32F2F\",\n      800: \"#C62828\",\n      900: \"#B71C1C\",\n      950: \"#5c0e0e\"\n    },\n    orange: {\n      50: \"#FFF3E0\",\n      100: \"#FFE0B2\",\n      200: \"#FFCC80\",\n      300: \"#FFB74D\",\n      400: \"#FFA726\",\n      500: \"#FF9800\",\n      600: \"#FB8C00\",\n      700: \"#F57C00\",\n      800: \"#EF6C00\",\n      900: \"#E65100\",\n      950: \"#732900\"\n    },\n    amber: {\n      50: \"#FFF8E1\",\n      100: \"#FFECB3\",\n      200: \"#FFE082\",\n      300: \"#FFD54F\",\n      400: \"#FFCA28\",\n      500: \"#FFC107\",\n      600: \"#FFB300\",\n      700: \"#FFA000\",\n      800: \"#FF8F00\",\n      900: \"#FF6F00\",\n      950: \"#803800\"\n    },\n    yellow: {\n      50: \"#FFFDE7\",\n      100: \"#FFF9C4\",\n      200: \"#FFF59D\",\n      300: \"#FFF176\",\n      400: \"#FFEE58\",\n      500: \"#FFEB3B\",\n      600: \"#FDD835\",\n      700: \"#FBC02D\",\n      800: \"#F9A825\",\n      900: \"#F57F17\",\n      950: \"#7b400c\"\n    },\n    teal: {\n      50: \"#E0F2F1\",\n      100: \"#B2DFDB\",\n      200: \"#80CBC4\",\n      300: \"#4DB6AC\",\n      400: \"#26A69A\",\n      500: \"#009688\",\n      600: \"#00897B\",\n      700: \"#00796B\",\n      800: \"#00695C\",\n      900: \"#004D40\",\n      950: \"#002720\"\n    },\n    cyan: {\n      50: \"#E0F7FA\",\n      100: \"#B2EBF2\",\n      200: \"#80DEEA\",\n      300: \"#4DD0E1\",\n      400: \"#26C6DA\",\n      500: \"#00BCD4\",\n      600: \"#00ACC1\",\n      700: \"#0097A7\",\n      800: \"#00838F\",\n      900: \"#006064\",\n      950: \"#003032\"\n    },\n    sky: {\n      50: \"#E1F5FE\",\n      100: \"#B3E5FC\",\n      200: \"#81D4FA\",\n      300: \"#4FC3F7\",\n      400: \"#29B6F6\",\n      500: \"#03A9F4\",\n      600: \"#039BE5\",\n      700: \"#0288D1\",\n      800: \"#0277BD\",\n      900: \"#01579B\",\n      950: \"#012c4e\"\n    },\n    blue: {\n      50: \"#E3F2FD\",\n      100: \"#BBDEFB\",\n      200: \"#90CAF9\",\n      300: \"#64B5F6\",\n      400: \"#42A5F5\",\n      500: \"#2196F3\",\n      600: \"#1E88E5\",\n      700: \"#1976D2\",\n      800: \"#1565C0\",\n      900: \"#0D47A1\",\n      950: \"#072451\"\n    },\n    indigo: {\n      50: \"#E8EAF6\",\n      100: \"#C5CAE9\",\n      200: \"#9FA8DA\",\n      300: \"#7986CB\",\n      400: \"#5C6BC0\",\n      500: \"#3F51B5\",\n      600: \"#3949AB\",\n      700: \"#303F9F\",\n      800: \"#283593\",\n      900: \"#1A237E\",\n      950: \"#0d123f\"\n    },\n    violet: {\n      50: \"#EDE7F6\",\n      100: \"#D1C4E9\",\n      200: \"#B39DDB\",\n      300: \"#9575CD\",\n      400: \"#7E57C2\",\n      500: \"#673AB7\",\n      600: \"#5E35B1\",\n      700: \"#512DA8\",\n      800: \"#4527A0\",\n      900: \"#311B92\",\n      950: \"#190e49\"\n    },\n    purple: {\n      50: \"#F3E5F5\",\n      100: \"#E1BEE7\",\n      200: \"#CE93D8\",\n      300: \"#BA68C8\",\n      400: \"#AB47BC\",\n      500: \"#9C27B0\",\n      600: \"#8E24AA\",\n      700: \"#7B1FA2\",\n      800: \"#6A1B9A\",\n      900: \"#4A148C\",\n      950: \"#250a46\"\n    },\n    fuchsia: {\n      50: \"#FDE6F3\",\n      100: \"#FBC1E3\",\n      200: \"#F897D1\",\n      300: \"#F56DBF\",\n      400: \"#F34DB2\",\n      500: \"#F12DA5\",\n      600: \"#E0289D\",\n      700: \"#CC2392\",\n      800: \"#B81E88\",\n      900: \"#951777\",\n      950: \"#4b0c3c\"\n    },\n    pink: {\n      50: \"#FCE4EC\",\n      100: \"#F8BBD0\",\n      200: \"#F48FB1\",\n      300: \"#F06292\",\n      400: \"#EC407A\",\n      500: \"#E91E63\",\n      600: \"#D81B60\",\n      700: \"#C2185B\",\n      800: \"#AD1457\",\n      900: \"#880E4F\",\n      950: \"#440728\"\n    },\n    rose: {\n      50: \"#FFF0F0\",\n      100: \"#FFD9D9\",\n      200: \"#FFC0C0\",\n      300: \"#FFA7A7\",\n      400: \"#FF8E8E\",\n      500: \"#FF7575\",\n      600: \"#FF5252\",\n      700: \"#FF3838\",\n      800: \"#F71C1C\",\n      900: \"#D50000\",\n      950: \"#3E0000\"\n    },\n    slate: {\n      50: \"#f8fafc\",\n      100: \"#f1f5f9\",\n      200: \"#e2e8f0\",\n      300: \"#cbd5e1\",\n      400: \"#94a3b8\",\n      500: \"#64748b\",\n      600: \"#475569\",\n      700: \"#334155\",\n      800: \"#1e293b\",\n      900: \"#0f172a\",\n      950: \"#020617\"\n    },\n    gray: {\n      50: \"#f9fafb\",\n      100: \"#f3f4f6\",\n      200: \"#e5e7eb\",\n      300: \"#d1d5db\",\n      400: \"#9ca3af\",\n      500: \"#6b7280\",\n      600: \"#4b5563\",\n      700: \"#374151\",\n      800: \"#1f2937\",\n      900: \"#111827\",\n      950: \"#030712\"\n    },\n    zinc: {\n      50: \"#fafafa\",\n      100: \"#f4f4f5\",\n      200: \"#e4e4e7\",\n      300: \"#d4d4d8\",\n      400: \"#a1a1aa\",\n      500: \"#71717a\",\n      600: \"#52525b\",\n      700: \"#3f3f46\",\n      800: \"#27272a\",\n      900: \"#18181b\",\n      950: \"#09090b\"\n    },\n    neutral: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#e5e5e5\",\n      300: \"#d4d4d4\",\n      400: \"#a3a3a3\",\n      500: \"#737373\",\n      600: \"#525252\",\n      700: \"#404040\",\n      800: \"#262626\",\n      900: \"#171717\",\n      950: \"#0a0a0a\"\n    },\n    stone: {\n      50: \"#fafaf9\",\n      100: \"#f5f5f4\",\n      200: \"#e7e5e4\",\n      300: \"#d6d3d1\",\n      400: \"#a8a29e\",\n      500: \"#78716c\",\n      600: \"#57534e\",\n      700: \"#44403c\",\n      800: \"#292524\",\n      900: \"#1c1917\",\n      950: \"#0c0a09\"\n    }\n  },\n  semantic: {\n\n    transitionDuration: '0.2s',\n    focusRing: {\n      width: \"0\",\n      style: \"none\",\n      color: \"unset\",\n      offset: \"0\"\n    },\n    disabledOpacity: \"0.38\",\n    iconSize: \"1rem\",\n    anchorGutter: \"0\",\n    primary: {\n      50: \"#E8F6F1\",\n      100: \"#C5EBE1\",\n      200: \"#9EDFCF\",\n      300: \"#76D3BD\",\n      400: \"#58C9AF\",\n      500: \"#3BBFA1\",\n      600: \"#35AF94\",\n      700: \"#2D9B83\",\n      800: \"#268873\",\n      900: \"#1A6657\",\n      950: \"#0d3329\"\n    },\n    formField: {\n      paddingX: \"0.75rem\",\n      paddingY: \"0.75rem\",\n      sm: {\n        fontSize: \"0.875rem\",\n        paddingX: \"0.625rem\",\n        paddingY: \"0.625rem\"\n      },\n      lg: {\n        fontSize: \"1.125rem\",\n        paddingX: \"0.825rem\",\n        paddingY: \"0.825rem\"\n      },\n      borderRadius: \"{border.radius.sm}\",\n      focusRing: {\n        width: \"2px\",\n        style: \"solid\",\n        color: \"{primary.color}\",\n        offset: \"-2px\",\n        shadow: \"none\"\n      },\n      transitionDuration: \"{transition.duration}\"\n    },\n    list: {\n      padding: \"0.5rem 0\",\n      gap: \"0\",\n      header: {\n        padding: \"0.75rem 1rem\"\n      },\n      option: {\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"{border.radius.none}\"\n      },\n      optionGroup: {\n        padding: \"0.75rem 1rem\",\n        fontWeight: \"700\"\n      }\n    },\n    content: {\n      borderRadius: \"{border.radius.sm}\"\n    },\n    mask: {\n      transitionDuration: \"0.15s\"\n    },\n    navigation: {\n      list: {\n        padding: \"0.5rem 0\",\n        gap: \"0\"\n      },\n      item: {\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"{border.radius.none}\",\n        gap: \"0.5rem\"\n      },\n      submenuLabel: {\n        padding: \"0.75rem 1rem\",\n        fontWeight: \"700\"\n      },\n      submenuIcon: {\n        size: \"0.875rem\"\n      }\n    },\n    overlay: {\n      select: {\n        borderRadius: \"{border.radius.sm}\",\n        shadow: \"0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)\"\n      },\n      popover: {\n        borderRadius: \"{border.radius.sm}\",\n        padding: \"1rem\",\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\n      },\n      modal: {\n        borderRadius: \"{border.radius.sm}\",\n        padding: \"1.5rem\",\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\n      },\n      navigation: {\n        shadow: \"0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)\"\n      }\n    },\n    colorScheme: {\n      light: {\n        focusRing: {\n          shadow: \"0 0 1px 4px {surface.200}\"\n        },\n        surface: {\n          0: \"#ffffff\",\n          50: \"#f8fafc\",\n          100: \"#f1f5f9\",\n          200: \"#e2e8f0\",\n          300: \"#cbd5e1\",\n          400: \"#94a3b8\",\n          500: \"#64748b\",\n          600: \"#475569\",\n          700: \"#334155\",\n          800: \"#1e293b\",\n          900: \"#0f172a\",\n          950: \"#020617\"\n        },\n        primary: {\n          color: \"{primary.500}\",\n          contrastColor: \"#ffffff\",\n          hoverColor: \"{primary.400}\",\n          activeColor: \"{primary.300}\"\n        },\n        highlight: {\n          background: \"color-mix(in srgb, {primary.color}, transparent 88%)\",\n          focusBackground: \"color-mix(in srgb, {primary.color}, transparent 76%)\",\n          color: \"{primary.700}\",\n          focusColor: \"{primary.800}\"\n        },\n        mask: {\n          background: \"rgba(0,0,0,0.32)\",\n          color: \"{surface.200}\"\n        },\n        formField: {\n          background: \"{surface.0}\",\n          disabledBackground: \"{surface.300}\",\n          filledBackground: \"{surface.100}\",\n          filledHoverBackground: \"{surface.200}\",\n          filledFocusBackground: \"{surface.100}\",\n          borderColor: \"{surface.400}\",\n          hoverBorderColor: \"{surface.900}\",\n          focusBorderColor: \"{primary.color}\",\n          invalidBorderColor: \"{red.800}\",\n          color: \"{surface.900}\",\n          disabledColor: \"{surface.600}\",\n          placeholderColor: \"{surface.600}\",\n          invalidPlaceholderColor: \"{red.800}\",\n          floatLabelColor: \"{surface.600}\",\n          floatLabelFocusColor: \"{primary.600}\",\n          floatLabelActiveColor: \"{surface.600}\",\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n          iconColor: \"{surface.600}\",\n          shadow: \"none\"\n        },\n        text: {\n          color: \"{surface.900}\",\n          hoverColor: \"{surface.900}\",\n          mutedColor: \"{surface.600}\",\n          hoverMutedColor: \"{surface.600}\"\n        },\n        content: {\n          background: \"{surface.0}\",\n          hoverBackground: \"{surface.100}\",\n          borderColor: \"{surface.300}\",\n          color: \"{text.color}\",\n          hoverColor: \"{text.hover.color}\"\n        },\n        overlay: {\n          select: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          },\n          popover: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          },\n          modal: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          }\n        },\n        list: {\n          option: {\n            focusBackground: \"{surface.100}\",\n            selectedBackground: \"{highlight.background}\",\n            selectedFocusBackground: \"{highlight.focus.background}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            selectedColor: \"{highlight.color}\",\n            selectedFocusColor: \"{highlight.focus.color}\",\n            icon: {\n              color: \"{surface.600}\",\n              focusColor: \"{surface.600}\"\n            }\n          },\n          optionGroup: {\n            background: \"transparent\",\n            color: \"{text.color}\"\n          }\n        },\n        navigation: {\n          item: {\n            focusBackground: \"{surface.100}\",\n            activeBackground: \"{surface.200}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            activeColor: \"{text.hover.color}\",\n            icon: {\n              color: \"{surface.600}\",\n              focusColor: \"{surface.600}\",\n              activeColor: \"{surface.600}\"\n            }\n          },\n          submenuLabel: {\n            background: \"transparent\",\n            color: \"{text.color}\"\n          },\n          submenuIcon: {\n            color: \"{surface.600}\",\n            focusColor: \"{surface.600}\",\n            activeColor: \"{surface.600}\"\n          }\n        }\n      },\n      dark: {\n        focusRing: {\n          shadow: \"0 0 1px 4px {surface.700}\"\n        },\n        surface: {\n          0: \"#ffffff\",\n          50: \"#fef2f3\",\n          100: \"#fac2c3\",\n          200: \"#f69294\",\n          300: \"#f36265\",\n          400: \"#ef3136\",\n          500: \"#eb0107\",\n          600: \"#c80106\",\n          700: \"#a50105\",\n          800: \"#810104\",\n          900: \"#5e0003\",\n          950: \"#3b0002\"\n        },\n        primary: {\n          color: \"{primary.400}\",\n          contrastColor: \"{surface.900}\",\n          hoverColor: \"{primary.300}\",\n          activeColor: \"{primary.200}\"\n        },\n        highlight: {\n          background: \"color-mix(in srgb, {primary.400}, transparent 84%)\",\n          focusBackground: \"color-mix(in srgb, {primary.400}, transparent 76%)\",\n          color: \"rgba(255,255,255,.87)\",\n          focusColor: \"rgba(255,255,255,.87)\"\n        },\n        mask: {\n          background: \"rgba(0,0,0,0.6)\",\n          color: \"{surface.200}\"\n        },\n        formField: {\n          background: \"{surface.950}\",\n          disabledBackground: \"{surface.700}\",\n          filledBackground: \"{surface.800}\",\n          filledHoverBackground: \"{surface.700}\",\n          filledFocusBackground: \"{surface.800}\",\n          borderColor: \"{surface.600}\",\n          hoverBorderColor: \"{surface.400}\",\n          focusBorderColor: \"{primary.color}\",\n          invalidBorderColor: \"{red.300}\",\n          color: \"{surface.0}\",\n          disabledColor: \"{surface.400}\",\n          placeholderColor: \"{surface.400}\",\n          invalidPlaceholderColor: \"{red.300}\",\n          floatLabelColor: \"{surface.400}\",\n          floatLabelFocusColor: \"{primary.color}\",\n          floatLabelActiveColor: \"{surface.400}\",\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n          iconColor: \"{surface.400}\",\n          shadow: \"none\"\n        },\n        text: {\n          color: \"{surface.0}\",\n          hoverColor: \"{surface.0}\",\n          mutedColor: \"{surface.400}\",\n          hoverMutedColor: \"{surface.400}\"\n        },\n        content: {\n          background: \"{surface.900}\",\n          hoverBackground: \"{surface.800}\",\n          borderColor: \"{surface.700}\",\n          color: \"{text.color}\",\n          hoverColor: \"{text.hover.color}\"\n        },\n        overlay: {\n          select: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          },\n          popover: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          },\n          modal: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          }\n        },\n        list: {\n          option: {\n            focusBackground: \"{surface.800}\",\n            selectedBackground: \"{highlight.background}\",\n            selectedFocusBackground: \"{highlight.focus.background}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            selectedColor: \"{highlight.color}\",\n            selectedFocusColor: \"{highlight.focus.color}\",\n            icon: {\n              color: \"{surface.400}\",\n              focusColor: \"{surface.400}\"\n            }\n          },\n          optionGroup: {\n            background: \"transparent\",\n            color: \"{text.muted.color}\"\n          }\n        },\n        navigation: {\n          item: {\n            focusBackground: \"{surface.800}\",\n            activeBackground: \"{surface.700}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            activeColor: \"{text.hover.color}\",\n            icon: {\n              color: \"{surface.400}\",\n              focusColor: \"{surface.400}\",\n              activeColor: \"{surface.400}\"\n            }\n          },\n          submenuLabel: {\n            background: \"transparent\",\n            color: \"{text.muted.color}\"\n          },\n          submenuIcon: {\n            color: \"{surface.400}\",\n            focusColor: \"{surface.400}\",\n            activeColor: \"{surface.400}\"\n          }\n        }\n      }\n    },\n\n  },\n\n} as MaterialBaseDesignTokens)"
            },
            {
                "name": "validate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({eventCoalescing: true}),\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    importProvidersFrom(MatNativeDateModule),\r\n    providePrimeNG({\r\n      theme: {\r\n        preset: Nora,\r\n        options: {\r\n        darkModeSelector: '.my-app-dark'\r\n        }\r\n\r\n      }\r\n    }),\r\n\r\n  ]\r\n}"
                }
            ],
            "src/app/app.component.ts": [
                {
                    "name": "format",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDateFormats",
                    "defaultValue": "{\r\n  parse: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\"\r\n  },\r\n  display: {\r\n    dateInput: \"DD/MM/YYYY\",\r\n    monthLabel: \"MM\",\r\n    monthYearLabel: \"YYYY\",\r\n    timeInput: \"DD/MM/YYYY HH:mm:ss\",\r\n    dateA11yLabel: \"\",\r\n    timeOptionLabel: \"\",\r\n    monthYearA11yLabel: \"\"\r\n  }\r\n}"
                },
                {
                    "name": "validate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(control) => {\r\n  if (dayjs().isBefore(dayjs(control.value))) {\r\n    return {err: true}\r\n  }\r\n\r\n  return null;\r\n}"
                }
            ],
            "src/app/prime-theme.ts": [
                {
                    "name": "MyPreset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/prime-theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MaterialBaseDesignTokens",
                    "defaultValue": "definePreset(Material, {\n  primitive: {\n    borderRadius: {\n      none: \"0\",\n      xs: \"2px\",\n      sm: \"4px\",\n      md: \"6px\",\n      lg: \"8px\",\n      xl: \"12px\"\n    },\n    emerald: {\n      50: \"#E8F6F1\",\n      100: \"#C5EBE1\",\n      200: \"#9EDFCF\",\n      300: \"#76D3BD\",\n      400: \"#58C9AF\",\n      500: \"#3BBFA1\",\n      600: \"#35AF94\",\n      700: \"#2D9B83\",\n      800: \"#268873\",\n      900: \"#1A6657\",\n      950: \"#0d3329\"\n    },\n    green: {\n      50: \"#E8F5E9\",\n      100: \"#C8E6C9\",\n      200: \"#A5D6A7\",\n      300: \"#81C784\",\n      400: \"#66BB6A\",\n      500: \"#4CAF50\",\n      600: \"#43A047\",\n      700: \"#388E3C\",\n      800: \"#2E7D32\",\n      900: \"#1B5E20\",\n      950: \"#0e2f10\"\n    },\n    lime: {\n      50: \"#F9FBE7\",\n      100: \"#F0F4C3\",\n      200: \"#E6EE9C\",\n      300: \"#DCE775\",\n      400: \"#D4E157\",\n      500: \"#CDDC39\",\n      600: \"#C0CA33\",\n      700: \"#AFB42B\",\n      800: \"#9E9D24\",\n      900: \"#827717\",\n      950: \"#413c0c\"\n    },\n    red: {\n      50: \"#FFEBEE\",\n      100: \"#FFCDD2\",\n      200: \"#EF9A9A\",\n      300: \"#E57373\",\n      400: \"#EF5350\",\n      500: \"#F44336\",\n      600: \"#E53935\",\n      700: \"#D32F2F\",\n      800: \"#C62828\",\n      900: \"#B71C1C\",\n      950: \"#5c0e0e\"\n    },\n    orange: {\n      50: \"#FFF3E0\",\n      100: \"#FFE0B2\",\n      200: \"#FFCC80\",\n      300: \"#FFB74D\",\n      400: \"#FFA726\",\n      500: \"#FF9800\",\n      600: \"#FB8C00\",\n      700: \"#F57C00\",\n      800: \"#EF6C00\",\n      900: \"#E65100\",\n      950: \"#732900\"\n    },\n    amber: {\n      50: \"#FFF8E1\",\n      100: \"#FFECB3\",\n      200: \"#FFE082\",\n      300: \"#FFD54F\",\n      400: \"#FFCA28\",\n      500: \"#FFC107\",\n      600: \"#FFB300\",\n      700: \"#FFA000\",\n      800: \"#FF8F00\",\n      900: \"#FF6F00\",\n      950: \"#803800\"\n    },\n    yellow: {\n      50: \"#FFFDE7\",\n      100: \"#FFF9C4\",\n      200: \"#FFF59D\",\n      300: \"#FFF176\",\n      400: \"#FFEE58\",\n      500: \"#FFEB3B\",\n      600: \"#FDD835\",\n      700: \"#FBC02D\",\n      800: \"#F9A825\",\n      900: \"#F57F17\",\n      950: \"#7b400c\"\n    },\n    teal: {\n      50: \"#E0F2F1\",\n      100: \"#B2DFDB\",\n      200: \"#80CBC4\",\n      300: \"#4DB6AC\",\n      400: \"#26A69A\",\n      500: \"#009688\",\n      600: \"#00897B\",\n      700: \"#00796B\",\n      800: \"#00695C\",\n      900: \"#004D40\",\n      950: \"#002720\"\n    },\n    cyan: {\n      50: \"#E0F7FA\",\n      100: \"#B2EBF2\",\n      200: \"#80DEEA\",\n      300: \"#4DD0E1\",\n      400: \"#26C6DA\",\n      500: \"#00BCD4\",\n      600: \"#00ACC1\",\n      700: \"#0097A7\",\n      800: \"#00838F\",\n      900: \"#006064\",\n      950: \"#003032\"\n    },\n    sky: {\n      50: \"#E1F5FE\",\n      100: \"#B3E5FC\",\n      200: \"#81D4FA\",\n      300: \"#4FC3F7\",\n      400: \"#29B6F6\",\n      500: \"#03A9F4\",\n      600: \"#039BE5\",\n      700: \"#0288D1\",\n      800: \"#0277BD\",\n      900: \"#01579B\",\n      950: \"#012c4e\"\n    },\n    blue: {\n      50: \"#E3F2FD\",\n      100: \"#BBDEFB\",\n      200: \"#90CAF9\",\n      300: \"#64B5F6\",\n      400: \"#42A5F5\",\n      500: \"#2196F3\",\n      600: \"#1E88E5\",\n      700: \"#1976D2\",\n      800: \"#1565C0\",\n      900: \"#0D47A1\",\n      950: \"#072451\"\n    },\n    indigo: {\n      50: \"#E8EAF6\",\n      100: \"#C5CAE9\",\n      200: \"#9FA8DA\",\n      300: \"#7986CB\",\n      400: \"#5C6BC0\",\n      500: \"#3F51B5\",\n      600: \"#3949AB\",\n      700: \"#303F9F\",\n      800: \"#283593\",\n      900: \"#1A237E\",\n      950: \"#0d123f\"\n    },\n    violet: {\n      50: \"#EDE7F6\",\n      100: \"#D1C4E9\",\n      200: \"#B39DDB\",\n      300: \"#9575CD\",\n      400: \"#7E57C2\",\n      500: \"#673AB7\",\n      600: \"#5E35B1\",\n      700: \"#512DA8\",\n      800: \"#4527A0\",\n      900: \"#311B92\",\n      950: \"#190e49\"\n    },\n    purple: {\n      50: \"#F3E5F5\",\n      100: \"#E1BEE7\",\n      200: \"#CE93D8\",\n      300: \"#BA68C8\",\n      400: \"#AB47BC\",\n      500: \"#9C27B0\",\n      600: \"#8E24AA\",\n      700: \"#7B1FA2\",\n      800: \"#6A1B9A\",\n      900: \"#4A148C\",\n      950: \"#250a46\"\n    },\n    fuchsia: {\n      50: \"#FDE6F3\",\n      100: \"#FBC1E3\",\n      200: \"#F897D1\",\n      300: \"#F56DBF\",\n      400: \"#F34DB2\",\n      500: \"#F12DA5\",\n      600: \"#E0289D\",\n      700: \"#CC2392\",\n      800: \"#B81E88\",\n      900: \"#951777\",\n      950: \"#4b0c3c\"\n    },\n    pink: {\n      50: \"#FCE4EC\",\n      100: \"#F8BBD0\",\n      200: \"#F48FB1\",\n      300: \"#F06292\",\n      400: \"#EC407A\",\n      500: \"#E91E63\",\n      600: \"#D81B60\",\n      700: \"#C2185B\",\n      800: \"#AD1457\",\n      900: \"#880E4F\",\n      950: \"#440728\"\n    },\n    rose: {\n      50: \"#FFF0F0\",\n      100: \"#FFD9D9\",\n      200: \"#FFC0C0\",\n      300: \"#FFA7A7\",\n      400: \"#FF8E8E\",\n      500: \"#FF7575\",\n      600: \"#FF5252\",\n      700: \"#FF3838\",\n      800: \"#F71C1C\",\n      900: \"#D50000\",\n      950: \"#3E0000\"\n    },\n    slate: {\n      50: \"#f8fafc\",\n      100: \"#f1f5f9\",\n      200: \"#e2e8f0\",\n      300: \"#cbd5e1\",\n      400: \"#94a3b8\",\n      500: \"#64748b\",\n      600: \"#475569\",\n      700: \"#334155\",\n      800: \"#1e293b\",\n      900: \"#0f172a\",\n      950: \"#020617\"\n    },\n    gray: {\n      50: \"#f9fafb\",\n      100: \"#f3f4f6\",\n      200: \"#e5e7eb\",\n      300: \"#d1d5db\",\n      400: \"#9ca3af\",\n      500: \"#6b7280\",\n      600: \"#4b5563\",\n      700: \"#374151\",\n      800: \"#1f2937\",\n      900: \"#111827\",\n      950: \"#030712\"\n    },\n    zinc: {\n      50: \"#fafafa\",\n      100: \"#f4f4f5\",\n      200: \"#e4e4e7\",\n      300: \"#d4d4d8\",\n      400: \"#a1a1aa\",\n      500: \"#71717a\",\n      600: \"#52525b\",\n      700: \"#3f3f46\",\n      800: \"#27272a\",\n      900: \"#18181b\",\n      950: \"#09090b\"\n    },\n    neutral: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#e5e5e5\",\n      300: \"#d4d4d4\",\n      400: \"#a3a3a3\",\n      500: \"#737373\",\n      600: \"#525252\",\n      700: \"#404040\",\n      800: \"#262626\",\n      900: \"#171717\",\n      950: \"#0a0a0a\"\n    },\n    stone: {\n      50: \"#fafaf9\",\n      100: \"#f5f5f4\",\n      200: \"#e7e5e4\",\n      300: \"#d6d3d1\",\n      400: \"#a8a29e\",\n      500: \"#78716c\",\n      600: \"#57534e\",\n      700: \"#44403c\",\n      800: \"#292524\",\n      900: \"#1c1917\",\n      950: \"#0c0a09\"\n    }\n  },\n  semantic: {\n\n    transitionDuration: '0.2s',\n    focusRing: {\n      width: \"0\",\n      style: \"none\",\n      color: \"unset\",\n      offset: \"0\"\n    },\n    disabledOpacity: \"0.38\",\n    iconSize: \"1rem\",\n    anchorGutter: \"0\",\n    primary: {\n      50: \"#E8F6F1\",\n      100: \"#C5EBE1\",\n      200: \"#9EDFCF\",\n      300: \"#76D3BD\",\n      400: \"#58C9AF\",\n      500: \"#3BBFA1\",\n      600: \"#35AF94\",\n      700: \"#2D9B83\",\n      800: \"#268873\",\n      900: \"#1A6657\",\n      950: \"#0d3329\"\n    },\n    formField: {\n      paddingX: \"0.75rem\",\n      paddingY: \"0.75rem\",\n      sm: {\n        fontSize: \"0.875rem\",\n        paddingX: \"0.625rem\",\n        paddingY: \"0.625rem\"\n      },\n      lg: {\n        fontSize: \"1.125rem\",\n        paddingX: \"0.825rem\",\n        paddingY: \"0.825rem\"\n      },\n      borderRadius: \"{border.radius.sm}\",\n      focusRing: {\n        width: \"2px\",\n        style: \"solid\",\n        color: \"{primary.color}\",\n        offset: \"-2px\",\n        shadow: \"none\"\n      },\n      transitionDuration: \"{transition.duration}\"\n    },\n    list: {\n      padding: \"0.5rem 0\",\n      gap: \"0\",\n      header: {\n        padding: \"0.75rem 1rem\"\n      },\n      option: {\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"{border.radius.none}\"\n      },\n      optionGroup: {\n        padding: \"0.75rem 1rem\",\n        fontWeight: \"700\"\n      }\n    },\n    content: {\n      borderRadius: \"{border.radius.sm}\"\n    },\n    mask: {\n      transitionDuration: \"0.15s\"\n    },\n    navigation: {\n      list: {\n        padding: \"0.5rem 0\",\n        gap: \"0\"\n      },\n      item: {\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"{border.radius.none}\",\n        gap: \"0.5rem\"\n      },\n      submenuLabel: {\n        padding: \"0.75rem 1rem\",\n        fontWeight: \"700\"\n      },\n      submenuIcon: {\n        size: \"0.875rem\"\n      }\n    },\n    overlay: {\n      select: {\n        borderRadius: \"{border.radius.sm}\",\n        shadow: \"0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)\"\n      },\n      popover: {\n        borderRadius: \"{border.radius.sm}\",\n        padding: \"1rem\",\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\n      },\n      modal: {\n        borderRadius: \"{border.radius.sm}\",\n        padding: \"1.5rem\",\n        shadow: \"0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)\"\n      },\n      navigation: {\n        shadow: \"0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)\"\n      }\n    },\n    colorScheme: {\n      light: {\n        focusRing: {\n          shadow: \"0 0 1px 4px {surface.200}\"\n        },\n        surface: {\n          0: \"#ffffff\",\n          50: \"#f8fafc\",\n          100: \"#f1f5f9\",\n          200: \"#e2e8f0\",\n          300: \"#cbd5e1\",\n          400: \"#94a3b8\",\n          500: \"#64748b\",\n          600: \"#475569\",\n          700: \"#334155\",\n          800: \"#1e293b\",\n          900: \"#0f172a\",\n          950: \"#020617\"\n        },\n        primary: {\n          color: \"{primary.500}\",\n          contrastColor: \"#ffffff\",\n          hoverColor: \"{primary.400}\",\n          activeColor: \"{primary.300}\"\n        },\n        highlight: {\n          background: \"color-mix(in srgb, {primary.color}, transparent 88%)\",\n          focusBackground: \"color-mix(in srgb, {primary.color}, transparent 76%)\",\n          color: \"{primary.700}\",\n          focusColor: \"{primary.800}\"\n        },\n        mask: {\n          background: \"rgba(0,0,0,0.32)\",\n          color: \"{surface.200}\"\n        },\n        formField: {\n          background: \"{surface.0}\",\n          disabledBackground: \"{surface.300}\",\n          filledBackground: \"{surface.100}\",\n          filledHoverBackground: \"{surface.200}\",\n          filledFocusBackground: \"{surface.100}\",\n          borderColor: \"{surface.400}\",\n          hoverBorderColor: \"{surface.900}\",\n          focusBorderColor: \"{primary.color}\",\n          invalidBorderColor: \"{red.800}\",\n          color: \"{surface.900}\",\n          disabledColor: \"{surface.600}\",\n          placeholderColor: \"{surface.600}\",\n          invalidPlaceholderColor: \"{red.800}\",\n          floatLabelColor: \"{surface.600}\",\n          floatLabelFocusColor: \"{primary.600}\",\n          floatLabelActiveColor: \"{surface.600}\",\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n          iconColor: \"{surface.600}\",\n          shadow: \"none\"\n        },\n        text: {\n          color: \"{surface.900}\",\n          hoverColor: \"{surface.900}\",\n          mutedColor: \"{surface.600}\",\n          hoverMutedColor: \"{surface.600}\"\n        },\n        content: {\n          background: \"{surface.0}\",\n          hoverBackground: \"{surface.100}\",\n          borderColor: \"{surface.300}\",\n          color: \"{text.color}\",\n          hoverColor: \"{text.hover.color}\"\n        },\n        overlay: {\n          select: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          },\n          popover: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          },\n          modal: {\n            background: \"{surface.0}\",\n            borderColor: \"{surface.0}\",\n            color: \"{text.color}\"\n          }\n        },\n        list: {\n          option: {\n            focusBackground: \"{surface.100}\",\n            selectedBackground: \"{highlight.background}\",\n            selectedFocusBackground: \"{highlight.focus.background}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            selectedColor: \"{highlight.color}\",\n            selectedFocusColor: \"{highlight.focus.color}\",\n            icon: {\n              color: \"{surface.600}\",\n              focusColor: \"{surface.600}\"\n            }\n          },\n          optionGroup: {\n            background: \"transparent\",\n            color: \"{text.color}\"\n          }\n        },\n        navigation: {\n          item: {\n            focusBackground: \"{surface.100}\",\n            activeBackground: \"{surface.200}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            activeColor: \"{text.hover.color}\",\n            icon: {\n              color: \"{surface.600}\",\n              focusColor: \"{surface.600}\",\n              activeColor: \"{surface.600}\"\n            }\n          },\n          submenuLabel: {\n            background: \"transparent\",\n            color: \"{text.color}\"\n          },\n          submenuIcon: {\n            color: \"{surface.600}\",\n            focusColor: \"{surface.600}\",\n            activeColor: \"{surface.600}\"\n          }\n        }\n      },\n      dark: {\n        focusRing: {\n          shadow: \"0 0 1px 4px {surface.700}\"\n        },\n        surface: {\n          0: \"#ffffff\",\n          50: \"#fef2f3\",\n          100: \"#fac2c3\",\n          200: \"#f69294\",\n          300: \"#f36265\",\n          400: \"#ef3136\",\n          500: \"#eb0107\",\n          600: \"#c80106\",\n          700: \"#a50105\",\n          800: \"#810104\",\n          900: \"#5e0003\",\n          950: \"#3b0002\"\n        },\n        primary: {\n          color: \"{primary.400}\",\n          contrastColor: \"{surface.900}\",\n          hoverColor: \"{primary.300}\",\n          activeColor: \"{primary.200}\"\n        },\n        highlight: {\n          background: \"color-mix(in srgb, {primary.400}, transparent 84%)\",\n          focusBackground: \"color-mix(in srgb, {primary.400}, transparent 76%)\",\n          color: \"rgba(255,255,255,.87)\",\n          focusColor: \"rgba(255,255,255,.87)\"\n        },\n        mask: {\n          background: \"rgba(0,0,0,0.6)\",\n          color: \"{surface.200}\"\n        },\n        formField: {\n          background: \"{surface.950}\",\n          disabledBackground: \"{surface.700}\",\n          filledBackground: \"{surface.800}\",\n          filledHoverBackground: \"{surface.700}\",\n          filledFocusBackground: \"{surface.800}\",\n          borderColor: \"{surface.600}\",\n          hoverBorderColor: \"{surface.400}\",\n          focusBorderColor: \"{primary.color}\",\n          invalidBorderColor: \"{red.300}\",\n          color: \"{surface.0}\",\n          disabledColor: \"{surface.400}\",\n          placeholderColor: \"{surface.400}\",\n          invalidPlaceholderColor: \"{red.300}\",\n          floatLabelColor: \"{surface.400}\",\n          floatLabelFocusColor: \"{primary.color}\",\n          floatLabelActiveColor: \"{surface.400}\",\n          floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n          iconColor: \"{surface.400}\",\n          shadow: \"none\"\n        },\n        text: {\n          color: \"{surface.0}\",\n          hoverColor: \"{surface.0}\",\n          mutedColor: \"{surface.400}\",\n          hoverMutedColor: \"{surface.400}\"\n        },\n        content: {\n          background: \"{surface.900}\",\n          hoverBackground: \"{surface.800}\",\n          borderColor: \"{surface.700}\",\n          color: \"{text.color}\",\n          hoverColor: \"{text.hover.color}\"\n        },\n        overlay: {\n          select: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          },\n          popover: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          },\n          modal: {\n            background: \"{surface.900}\",\n            borderColor: \"{surface.900}\",\n            color: \"{text.color}\"\n          }\n        },\n        list: {\n          option: {\n            focusBackground: \"{surface.800}\",\n            selectedBackground: \"{highlight.background}\",\n            selectedFocusBackground: \"{highlight.focus.background}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            selectedColor: \"{highlight.color}\",\n            selectedFocusColor: \"{highlight.focus.color}\",\n            icon: {\n              color: \"{surface.400}\",\n              focusColor: \"{surface.400}\"\n            }\n          },\n          optionGroup: {\n            background: \"transparent\",\n            color: \"{text.muted.color}\"\n          }\n        },\n        navigation: {\n          item: {\n            focusBackground: \"{surface.800}\",\n            activeBackground: \"{surface.700}\",\n            color: \"{text.color}\",\n            focusColor: \"{text.hover.color}\",\n            activeColor: \"{text.hover.color}\",\n            icon: {\n              color: \"{surface.400}\",\n              focusColor: \"{surface.400}\",\n              activeColor: \"{surface.400}\"\n            }\n          },\n          submenuLabel: {\n            background: \"transparent\",\n            color: \"{text.muted.color}\"\n          },\n          submenuIcon: {\n            color: \"{surface.400}\",\n            focusColor: \"{surface.400}\",\n            activeColor: \"{surface.400}\"\n          }\n        }\n      }\n    },\n\n  },\n\n} as MaterialBaseDesignTokens)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "format",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/clarity-trial/clarity-trial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClarityTrialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/combobox/combobox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/primeng/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/comps/primeng/prime-input/prime-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrimeInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/prime-theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MyPreset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}